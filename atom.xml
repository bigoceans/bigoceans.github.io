<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>BIGOcean&#39;BLOG</title>
  
  <subtitle>让生活更精彩</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.8868866.xyz/"/>
  <updated>2020-03-23T11:08:33.684Z</updated>
  <id>https://www.8868866.xyz/</id>
  
  <author>
    <name>BIGOcean</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>科普经典</title>
    <link href="https://www.8868866.xyz/2020/03/23/%E6%82%A6%E8%AF%BB/%E7%A7%91%E6%99%AE%E7%BB%8F%E5%85%B8/"/>
    <id>https://www.8868866.xyz/2020/03/23/%E6%82%A6%E8%AF%BB/%E7%A7%91%E6%99%AE%E7%BB%8F%E5%85%B8/</id>
    <published>2020-03-23T10:39:52.000Z</published>
    <updated>2020-03-23T11:08:33.684Z</updated>
    
    <content type="html"><![CDATA[<p><strong><em>更多精彩文章请关注公众号『大海的BLOG』</em></strong></p><p>30部必读的科普经典</p><pre><code>《几何原本》《天体运行论》《心血运动论》《自然哲学之数学原理》《自然史》《物种起源》《昆虫记》《人类的故事》《鸟与文学》《所罗门王的指环》《菌儿自传》《趣味地球化学》《寂静的春天》《从一到无穷大》《双螺旋》《黑猩猩在召唤》《物候学》《细胞生命的礼赞》《自私的基因》《啊哈!灵机一动》《阿西莫夫最新科学指南》《古海荒漠》《混沌：开创新科学》《时间简史》《皇帝新脑》《西方科学的起源》《魔鬼出没的世界&gt;《万物简史》《数字化生存》《生命的未来》</code></pre><p><strong><em>更多精彩文章请关注公众号『大海的BLOG』</em></strong></p><p>原文链接：<a href="https://blog.csdn.net/byxdaz/article/details/4222372" target="_blank" rel="noopener">https://blog.csdn.net/byxdaz/article/details/4222372</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;&lt;em&gt;更多精彩文章请关注公众号『大海的BLOG』&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;30部必读的科普经典&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;《几何原本》
《天体运行论》
《心血运动论》
《自然哲学之数学原理》
《自然史》
《物种起源》
《昆虫记》
《人
      
    
    </summary>
    
    
    
      <category term="悦读" scheme="https://www.8868866.xyz/tags/%E6%82%A6%E8%AF%BB/"/>
    
  </entry>
  
  <entry>
    <title>谋略经典</title>
    <link href="https://www.8868866.xyz/2020/03/23/%E6%82%A6%E8%AF%BB/%E8%B0%8B%E7%95%A5%E7%BB%8F%E5%85%B8/"/>
    <id>https://www.8868866.xyz/2020/03/23/%E6%82%A6%E8%AF%BB/%E8%B0%8B%E7%95%A5%E7%BB%8F%E5%85%B8/</id>
    <published>2020-03-23T10:39:42.000Z</published>
    <updated>2020-03-23T11:08:24.497Z</updated>
    
    <content type="html"><![CDATA[<p><strong><em>更多精彩文章请关注公众号『大海的BLOG』</em></strong></p><p>20部必读的谋略经典</p><pre><code>第1部 《道德经》第2部 《鬼谷子》第3部 《管子》第4部 《论语》第5部 《孙子兵法》第6部 《荀子》第7部 《韩非子》第8部 《战国策》第9部 《人物志》第10部 《贞观政要》第11部 《反经》第12部 《资治通鉴》第13部 《三国演义》第14部 《菜根谭》第15部 《智囊》第16部 《三十六计》第17部 《曾国藩家书》第18部 《厚黑学》第19部 《君主论》第20部 《战争论》</code></pre><p><strong><em>更多精彩文章请关注公众号『大海的BLOG』</em></strong></p><p>原文链接：<a href="https://blog.csdn.net/byxdaz/article/details/4222372" target="_blank" rel="noopener">https://blog.csdn.net/byxdaz/article/details/4222372</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;&lt;em&gt;更多精彩文章请关注公众号『大海的BLOG』&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;20部必读的谋略经典&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;第1部 《道德经》
第2部 《鬼谷子》
第3部 《管子》
第4部 《论语》
第5部 《孙子兵法》
第6部 《荀子
      
    
    </summary>
    
    
    
      <category term="悦读" scheme="https://www.8868866.xyz/tags/%E6%82%A6%E8%AF%BB/"/>
    
  </entry>
  
  <entry>
    <title>心理励志经典</title>
    <link href="https://www.8868866.xyz/2020/03/23/%E6%82%A6%E8%AF%BB/%E5%BF%83%E7%90%86%E5%8A%B1%E5%BF%97%E7%BB%8F%E5%85%B8/"/>
    <id>https://www.8868866.xyz/2020/03/23/%E6%82%A6%E8%AF%BB/%E5%BF%83%E7%90%86%E5%8A%B1%E5%BF%97%E7%BB%8F%E5%85%B8/</id>
    <published>2020-03-23T10:39:32.000Z</published>
    <updated>2020-03-23T11:08:12.521Z</updated>
    
    <content type="html"><![CDATA[<p><strong><em>更多精彩文章请关注公众号『大海的BLOG』</em></strong></p><p>20部必读的心理励志经典</p><pre><code>第1部　《富兰克林》第2部　《依靠自我》第3部　《自己拯救自己》第4部　《伟大的励志书》第5部　《致加西亚的信》第6部　《巴比伦富翁的秘密》第7部　《思考致富》第8部　《一生的计划》第9部　《积极思考的力量》第10部　《人人都能成功》第11部　《世界上最伟大的推销员》第12部　《与你在颠峰相会》第13部　《人性的弱点》第14部　《唤醒心中的巨人》第15部　《攻心为上》第16部　《谁动了我的奶酪》第17部　《高效人生的12个关键点》第18部　《平地而起》第19部　《高效能人士的七个习惯》第20部　《邮差弗雷德》</code></pre><p><strong><em>更多精彩文章请关注公众号『大海的BLOG』</em></strong></p><p>原文链接：<a href="https://blog.csdn.net/byxdaz/article/details/4222372" target="_blank" rel="noopener">https://blog.csdn.net/byxdaz/article/details/4222372</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;&lt;em&gt;更多精彩文章请关注公众号『大海的BLOG』&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;20部必读的心理励志经典&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;第1部　《富兰克林》
第2部　《依靠自我》
第3部　《自己拯救自己》
第4部　《伟大的励志书》
第5部　《致
      
    
    </summary>
    
    
    
      <category term="悦读" scheme="https://www.8868866.xyz/tags/%E6%82%A6%E8%AF%BB/"/>
    
  </entry>
  
  <entry>
    <title>名人传记经典</title>
    <link href="https://www.8868866.xyz/2020/03/23/%E6%82%A6%E8%AF%BB/%E5%90%8D%E4%BA%BA%E4%BC%A0%E8%AE%B0%E7%BB%8F%E5%85%B8/"/>
    <id>https://www.8868866.xyz/2020/03/23/%E6%82%A6%E8%AF%BB/%E5%90%8D%E4%BA%BA%E4%BC%A0%E8%AE%B0%E7%BB%8F%E5%85%B8/</id>
    <published>2020-03-23T10:39:19.000Z</published>
    <updated>2020-03-23T11:08:02.029Z</updated>
    
    <content type="html"><![CDATA[<p>个人很中意：鲁迅</p><p><strong><em>更多精彩文章请关注公众号『大海的BLOG』</em></strong></p><p>30部必读的名人传记经典</p><pre><code>第1部 《忏悔录》第2部 《贝多芬传》第3部 《梵高传——对生活的渴求》第4部 《巴尔扎克传》第5部 《我生活的故事》第6部 《约翰逊传》第7部 《萨特传》第8部 《我的爱，我的自由》第9部 《居里夫人传》第10部 《罗素自传》第11部 《罗曼·罗兰传》第12部 《我妹妹与我》第13部 《甘地自传》第14部 《真爱让我如此幸福》第15部 《卡夫卡传》第16部 《牛犊顶橡树》第17部 《从文自传》第18部 《拿破仑传》第19部 《富兰克林自传》第20部 《萨尔瓦多·达利的秘密生活》第21部 《荣格的生活与工作》第22部 《阿加莎·克里斯蒂自传》第23部 《苏东坡传》第24部 《杰克·韦尔奇自传》第25部 《巴赫传》第26部 《华盛顿全传》第27部 《我毕生的故事》第28部 《房龙传》第29部 《无尽的探索》第30部 《卓别林自传》</code></pre><p><strong><em>更多精彩文章请关注公众号『大海的BLOG』</em></strong></p><p>原文链接：<a href="https://blog.csdn.net/byxdaz/article/details/4222372" target="_blank" rel="noopener">https://blog.csdn.net/byxdaz/article/details/4222372</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;个人很中意：鲁迅&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;更多精彩文章请关注公众号『大海的BLOG』&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;30部必读的名人传记经典&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;第1部 《忏悔录》
第2部 《贝多芬传》
第3部 《梵高传——对生活的渴求》
      
    
    </summary>
    
    
    
      <category term="悦读" scheme="https://www.8868866.xyz/tags/%E6%82%A6%E8%AF%BB/"/>
    
  </entry>
  
  <entry>
    <title>修身处世经典</title>
    <link href="https://www.8868866.xyz/2020/03/23/%E6%82%A6%E8%AF%BB/%E4%BF%AE%E8%BA%AB%E5%A4%84%E4%B8%96%E7%BB%8F%E5%85%B8/"/>
    <id>https://www.8868866.xyz/2020/03/23/%E6%82%A6%E8%AF%BB/%E4%BF%AE%E8%BA%AB%E5%A4%84%E4%B8%96%E7%BB%8F%E5%85%B8/</id>
    <published>2020-03-23T10:39:06.000Z</published>
    <updated>2020-03-23T11:07:24.586Z</updated>
    
    <content type="html"><![CDATA[<p><strong><em>更多精彩文章请关注公众号『大海的BLOG』</em></strong></p><p>20部必读的修身处世经典</p><pre><code>第1部 《道德经》 老子 (中国·先秦生卒年不详)第2部 《圣经》 基督教经典第3部 《论语》 孔子 (中国·春秋公元前55l-前479)第4部 《孟子》 孟子 (中国·战国约公元前372-前289)第5部 《沉思录》 马可·奥勒留·安东尼(古罗马121-180)第6部 《荀子》 荀子 (中国·战国约公元前330-前230)第7部 《庄子》 庄子 (中国·战国约公元前369-前286)第8部 《道德箴言录》 拉罗什福科(法国1613-1680)第9部 《颜氏家训》 颜之推 (中国·南北朝531-591)第10部 《人生论》 弗兰西斯·培根(英国1561-1626)第11部 《家范》司马光 (中国 ·北宋1019-1086)第12部 《智慧书》 巴尔塔沙·葛拉西安(西班牙1601-1658)第13部 《世范》 袁采 (中国·南宋？-1195)第14部 《富兰克林自传》 本杰明唁兰克林(美国1706-1790)第15部 《小窗幽记》 陈继儒 (中国·明代1558-1639)第16部 《蒙田随笔》 蒙田 (法国1533-1592)第17部 《菜根谭》 洪应明 (中国·明代生卒年不详)第18部 《曾国藩家书》 曾国藩 (中国清代1811-1872)第19部 《人性的弱点》 戴尔·卡耐基(美国1888-1955)第20部 《傅雷家书》傅雷 (中国1908-1966)</code></pre><p><strong><em>更多精彩文章请关注公众号『大海的BLOG』</em></strong></p><p>原文链接：<a href="https://blog.csdn.net/byxdaz/article/details/4222372" target="_blank" rel="noopener">https://blog.csdn.net/byxdaz/article/details/4222372</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;&lt;em&gt;更多精彩文章请关注公众号『大海的BLOG』&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;20部必读的修身处世经典&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
第1部 《道德经》 老子 (中国·先秦生卒年不详)
第2部 《圣经》 基督教经典
第3部 《论语》 孔子 
      
    
    </summary>
    
    
    
      <category term="悦读" scheme="https://www.8868866.xyz/tags/%E6%82%A6%E8%AF%BB/"/>
    
  </entry>
  
  <entry>
    <title>管理学经典</title>
    <link href="https://www.8868866.xyz/2020/03/23/%E6%82%A6%E8%AF%BB/%E7%AE%A1%E7%90%86%E5%AD%A6%E7%BB%8F%E5%85%B8/"/>
    <id>https://www.8868866.xyz/2020/03/23/%E6%82%A6%E8%AF%BB/%E7%AE%A1%E7%90%86%E5%AD%A6%E7%BB%8F%E5%85%B8/</id>
    <published>2020-03-23T10:38:49.000Z</published>
    <updated>2020-03-23T11:07:40.913Z</updated>
    
    <content type="html"><![CDATA[<p><strong><em>更多精彩文章请关注公众号『大海的BLOG』</em></strong></p><p>30部必读的管理学经典</p><pre><code>第1部 《科学管理原理》 弗雷德里克·温斯洛·泰罗(美国1856—1915)第2部 《社会组织和经济组织理论》 马克思·韦伯(德国1864—1920)第3部 《经理人员的职能》 切斯特·巴纳德(美国1886—1961)第4部 《工业管理和一般管理》 亨利·法约尔(法国1841-1925)第5部 《工业文明的社会问题》 埃尔顿·梅奥(美国1880—1949)第6部 《企业中人的方面》 道格拉斯·麦格雷戈(美国1906—1964)第7部 《个性与组织》 克里斯·阿吉里斯(美国1923—)第8部 《如何选样领导模式》 罗伯特·坦南鲍姆(美国1915—2003)第9部 《管理决策新科学》 赫伯特·西蒙(美国1916—2001)第10部 《伟大的组织者》 欧内斯特·戴尔(美国1914—)第11部 《管理的新模式》 伦西斯·利克特(美国1903—1981)第12部 《营销管理》 菲利普·科特勒(美国1931—)第13部 《让工作适合管理者》 弗雷德·菲德勒(美国1922—)第14部 《组织效能评价标准》 斯坦利·E·西肖尔(美国1915—1999)第15部 《再论如何激励员工》 弗雷德里克·赫茨伯格(美国1923—2000)第16部 《组织与管理：系统方法与权变方法》 弗里蒙特·卡斯特(美国1924—)第17部 《经理工作的性质》 亨利·明茨伯格(加拿大1939—)第18部 《管理：任务、责任、实践》 彼得·杜拉克(美国1909—)第19部 《再论管理理论的丛林》 哈罗德·孔茨(美国1908—1984)第20部 《杰克·韦尔奇自传》 杰克·韦尔奇(美国1935—)第21部 《竞争战略》 迈克尔·波特(美国1947—)第22部 《Z理论》 威廉·大内(美国1943—)第23部 《转危为安》 爱德华兹·戴明(美国1900—1993)第24部 《总经理》 约翰·科特(美国1947—)第25部 《追求卓越》 托马斯·彼得斯(美国1942—)第26部 《领导者：成功谋略》 沃伦·本尼斯(美国1925—)第27部 《巨人学舞》 罗莎贝丝·摩丝·坎特(美国1943—)第28部 《第五项修炼》 彼得·圣吉(美国1947—)第29部 《企业再造》 迈克尔·汉默(美国1948—)第30部 《基业长青》 詹姆斯·柯林斯(美国1958—)</code></pre><p><strong><em>更多精彩文章请关注公众号『大海的BLOG』</em></strong></p><p>原文链接：<a href="https://blog.csdn.net/byxdaz/article/details/4222372" target="_blank" rel="noopener">https://blog.csdn.net/byxdaz/article/details/4222372</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;&lt;em&gt;更多精彩文章请关注公众号『大海的BLOG』&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;30部必读的管理学经典&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;第1部 《科学管理原理》 弗雷德里克·温斯洛·泰罗(美国1856—1915)
第2部 《社会组织和经济组织理论
      
    
    </summary>
    
    
    
      <category term="悦读" scheme="https://www.8868866.xyz/tags/%E6%82%A6%E8%AF%BB/"/>
    
  </entry>
  
  <entry>
    <title>投资学经典</title>
    <link href="https://www.8868866.xyz/2020/03/23/%E6%82%A6%E8%AF%BB/%E6%8A%95%E8%B5%84%E5%AD%A6%E7%BB%8F%E5%85%B8/"/>
    <id>https://www.8868866.xyz/2020/03/23/%E6%82%A6%E8%AF%BB/%E6%8A%95%E8%B5%84%E5%AD%A6%E7%BB%8F%E5%85%B8/</id>
    <published>2020-03-23T10:38:35.000Z</published>
    <updated>2020-03-23T11:07:51.188Z</updated>
    
    <content type="html"><![CDATA[<p><strong><em>更多精彩文章请关注公众号『大海的BLOG』</em></strong></p><p>30部必读的投资学经典</p><pre><code>第1部 《聪明的投资者》 本杰明·格雷厄姆(美国1894—1976)第2部 《金融炼金术》 乔治·索罗斯(美国1930—)第3部 《漫步华尔街》 伯顿·马尔基尔(美国1933—)第4部 《克罗淡投资策略》 斯坦利·克罗(美国1928—)第5部 《艾略特波浪理论》 小罗伯特·R·普莱切特(美国1949—)第6部 《怎样选择成长股》 菲利普·A·费雪(美国1908—2004)第7部 《投资学精要》 兹维·博迪(美国1943—)第8部 《金融学》 罗伯特·C·莫顿(美国1944—)第9部 《投资艺术》 查尔斯·艾里斯(美国1941—)第10部 《华尔街45年》 威廉·戴尔伯特·江恩(美国1878—1955)第11部 《股市趋势技术分析》 约翰·迈占(美国1912—1987)第12部 《笑傲股市》 威廉·欧奈尔(美国1933—)第13部 《期货市场技术分析》 约翰·墨菲(美国1934—)第14部 《资本市场的混沌与秩序》 埃德加·E·彼得斯(美国1952—)第15部 《华尔街股市投资经典》 詹姆斯·P·奥肖内西(美国1931—)第16部 《战胜华尔街》 彼得·林奇(美国1944—)第17部 《专业投机原理》 维克多·斯波朗迪(美国1952—)第18部 《巴菲特：从100元到160亿》 沃伦·巴菲特(美国1930—)第19部 《交易冠军》 马丁·舒华兹(美国1945—)第20部 《股票作手回忆录》 爱德温·李费佛(美国1877—1940)第21部 《罗杰斯环球投资旅行》 吉姆·罗杰斯(美国1942—)第22部 《世纪炒股赢家》 罗伊·纽伯格(美国1903—1999)第23部 《一个投机者的告白》 安德烈·科斯托兰尼(德国1906—1999)第24部 《逆向思考的艺术》 汉弗菜·B·尼尔(美国1904—1978)第25部 《通向金融王国的自由之路》 范·K·撒普(美国1945—)第26部 《泥鸽靶》 弗兰克·帕特诺伊(美国1967—)第27部 《贼巢》 詹姆斯·B·斯图尔特(美国1951—)第28部 《非理性繁荣》 罗伯特·希勒(美国1946—)第29部 《伟大的博弈》 约翰·斯蒂尔·戈登(美国1944—)第30部 《散户至上》 阿瑟·莱维特(美国1931—)</code></pre><p><strong><em>更多精彩文章请关注公众号『大海的BLOG』</em></strong></p><p>原文链接：<a href="https://blog.csdn.net/byxdaz/article/details/4222372" target="_blank" rel="noopener">https://blog.csdn.net/byxdaz/article/details/4222372</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;&lt;em&gt;更多精彩文章请关注公众号『大海的BLOG』&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;30部必读的投资学经典&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;第1部 《聪明的投资者》 本杰明·格雷厄姆(美国1894—1976)
第2部 《金融炼金术》 乔治·索罗斯(美
      
    
    </summary>
    
    
    
      <category term="悦读" scheme="https://www.8868866.xyz/tags/%E6%82%A6%E8%AF%BB/"/>
    
  </entry>
  
  <entry>
    <title>经济学经典</title>
    <link href="https://www.8868866.xyz/2020/03/23/%E6%82%A6%E8%AF%BB/%E7%BB%8F%E6%B5%8E%E5%AD%A6%E7%BB%8F%E5%85%B8/"/>
    <id>https://www.8868866.xyz/2020/03/23/%E6%82%A6%E8%AF%BB/%E7%BB%8F%E6%B5%8E%E5%AD%A6%E7%BB%8F%E5%85%B8/</id>
    <published>2020-03-23T10:38:13.000Z</published>
    <updated>2020-03-23T11:06:49.299Z</updated>
    
    <content type="html"><![CDATA[<p><strong><em>更多精彩文章请关注公众号『大海的BLOG』</em></strong></p><p>30部必读的经济学经典</p><pre><code>第1部 《经济表》 弗朗斯瓦·魁奈(法国1694—1774)第2部 《国富论》 亚当·斯密(英国1723—1790)第3部 《人口原理》 托马斯·罗伯特·马尔萨斯(英国1766—1834)第4部 《政治经济学概论》 让·巴蒂斯特·萨伊(法国1767—1832)第5部 《政治经济学及赋税原理》 大卫·李嘉图(英国1772—1823)第6部 《政治经济学新原理》 西蒙·德·西斯蒙第(法国1773—1842)第7部 《政治经济学的国民体系》 弗里德利希·李斯特(德国1789—1846)第8部 《政治经济学原理》 约翰·斯图亚特·穆勒(英国1806—1873)第9部 《资本论》 卡尔·马克思(德国1818—1883)第10部 《政治经济学理论》 威廉·斯坦利·杰文斯(英国1835—1882)第11部 《国民经济学原理》 卡尔·门格尔(奥地利1840—1921)第12部 《纯粹政治经济学纲要》 里昂·瓦尔拉斯(法国1834—1910)第13部 《资本与利息》 欧根·冯·庞巴维克(奥地利185l一1914)第14部 《经济学原理》 阿弗里德·马歇尔(英国1842—1924)第15部 《利息与价格》 克努特·维克塞尔(瑞典1851—1926)第16部 《财富的分配》 约翰·贝茨·克拉克(美国1847—1938)第17部 《有闲阶级论》 托尔斯坦·本德·凡勃伦(美国1857—1929)第18部 《经济发展理论》 约瑟夫·阿罗斯·熊彼特(奥地利1883—1950)第19部 《福利经济学》 阿瑟·赛西尔·庇古(英国1877—1959)第20部 《不完全竞争经济学》 琼·罗宾逊(英国1903—1983)第21部 《就业、利息和货币通论》 约翰·梅纳德·凯恩斯(英国1883—1946)第22部 《价值与资本》 约翰·理查德·希克斯(英国1904—1989)第23部 《通往奴役之路》 哈耶克(奥地利1899—1992)第24部 《经济学》 保罗·萨缪尔森(美国1915一)第25部 《丰裕社会》 约翰·肯尼斯·加尔布雷斯(美国1908—)第26部 《经济成长的阶段》 沃尔特·罗斯托(美国1916—)第27部 《人力资本投资》 西奥多·威廉·舒尔茨(美国1902—1998)第28部 《资本上义与自由》 米尔顿·弗里德曼(美国1912—)第29部 《经济学》 约瑟夫·斯蒂格利茨(美国1943—)第30部 《经济学原理》 格里高利·曼昆(美国1958—)</code></pre><p><strong><em>更多精彩文章请关注公众号『大海的BLOG』</em></strong></p><p>原文链接：<a href="https://blog.csdn.net/byxdaz/article/details/4222372" target="_blank" rel="noopener">https://blog.csdn.net/byxdaz/article/details/4222372</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;&lt;em&gt;更多精彩文章请关注公众号『大海的BLOG』&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;30部必读的经济学经典&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;第1部 《经济表》 弗朗斯瓦·魁奈(法国1694—1774)
第2部 《国富论》 亚当·斯密(英国1723—1
      
    
    </summary>
    
    
    
      <category term="悦读" scheme="https://www.8868866.xyz/tags/%E6%82%A6%E8%AF%BB/"/>
    
  </entry>
  
  <entry>
    <title>编程类</title>
    <link href="https://www.8868866.xyz/2020/03/23/%E6%82%A6%E8%AF%BB/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    <id>https://www.8868866.xyz/2020/03/23/%E6%82%A6%E8%AF%BB/%E7%BC%96%E7%A8%8B%E7%B1%BB/</id>
    <published>2020-03-23T10:26:58.000Z</published>
    <updated>2020-03-23T10:42:58.019Z</updated>
    
    <content type="html"><![CDATA[<p>经典的书都有一个特点： 详尽得当，通俗又不失理论化，信息量非常大。</p><p> <strong><em>更多精彩文章请关注公众号『大海的BLOG』</em></strong></p><pre><code>  计算机专业推荐书籍：  一、 思想类读物：  1. 《通灵芯片:计算机运作的简单原理》(美国) 丹尼尔·希利斯著， 以通俗易懂的方式阐述计算机的构造与原理；  2. 《逻辑的引擎》作者：（美）马丁·戴维斯著， 从十七世纪的莱布尼茨之梦起始，讲述计算机背后的逻辑原理及其主人公的故事，非常精彩！  3. 《编程珠玑》作者：（美）本特利（Bentley，J.）著， 看似简单的东西，也能挖掘出珍珠般的光彩。  4. 《Unix 编程艺术》 作者： Eric S. Raymond 。 阐述软件设计的原则与方法， 很有参考价值， 不过要读懂的话可能需要一定的功力。  二、 基础课程类读物：  0.  《计算机科学概论》(Computer Science An Overview 9th)（美）J.Glenn Brookshear 著， 关于计算机导引的上佳英文入门读物。  1.  《The C Programming Language》（第2版） 作者： （美）Brian W.Kernighan, Dennis M.Ritchie 著， C编程必读，简洁扼要；我就是通过这本书开始消除对“字符串”处理的恐惧感的。  2.  《操作系统：精髓与设计原理》(第五版)  作者：（美）William Stallings 著， 操作系统的推荐教程，阐述详尽得当。   3.  《数据结构基础》（C语言版） 作者： 霍罗维兹 (Ellis Horowitz) ， 萨尼 (Sartaj Sahni) , 安德尔森-费里德 (Susan Anderson-Freed)  ，数据结构的推荐读物，建议读英文版。  4.  《算法分析与设计基础》作者  ：(美)莱维丁，算法入门的推荐读物，讲解清晰而不失深度。当需要轻松阅读理解其思想时读这本，当需要深入理解算法分析时，建议阅读《算法导论》，最好两本都有，相得益彰。     5.  《数据库系统概念》(第5版) ， 作者： Abraham Silberschatz, Henry F.Korth, S.Sudarshan 著， 杨冬青，马秀莉， 唐世渭译。全面深入，详尽得当，通俗与理论并重，是为经典。  6.  《程序设计实践》（第2版） 作者： Brian W. Kernighan Rob Pike 著， 裘宗燕译。 或者读英文版（The practice of programming）更好。 教会初学者进行程序设计而不是简单编码的上佳读物，绝对推荐！  7。 《TCP/IP 详解》（协议） ：  不必多说。 看完倾理论性的《计算机网络》教材， 有必要阅读此书来加强加深理解，真正打好网络编程基础。  三、 技术类书籍  1. 《深入理解计算机系统》作者：（美）布赖恩特 （Bryant,R.E.） 等著， 以程序员的角度和全局的视角来审视计算机系统，涵盖从数据表示到程序运行、系统交互的各个方面，非常值得深读！    2. 《Writing solid code》作者： （美） Steve Maguire 著，想要写出bug-free程序的上佳读物之一。相应读物的还有《高质量程序设计艺术》(code quality: from a open source perspective) ， 《代码整洁之道》(Writing clean code) 3. 《Thinking in Java》 作者：（美）Bruce Eckel 著，Java 语言编程的推荐教材。 《Effective Java》(Joshua Bloch著) 作为进阶书籍。 4. 《设计模式——可复用面向对象软件的基础》作者：（美）“四人帮”，设计模式的必读书籍（亦可用于参考）。 5. 《实现模式》 作者： Kent Beck ， 非常有益的面向对象编程经验谈。 6. 《重构： 改善既有代码的设计》 作者：作者: Martin Fowler ， 作为面向对象编程的收藏书籍，随时可参阅。 7. 《Test Driven Development: By Example》 作者： Kent Beck ;  测试驱动开发的优秀入门书籍 8. 《MYSQL必知必会》 作者：(英)Ben Forta. 人民邮电出版社。薄薄的一百页左右， 快速上手和使用 mysql 数据库。 9. 《正则表达式必知必会》 作者：(英)Ben Forta. 译者: 杨涛 / 王建桥 / 杨晓.  人民邮电出版社。 薄薄的一百页左右， 清晰的阐述， 适合正则表达式的快速了解和上手。 10. 《Java TCP/IP socket 编程》 作者: (美)Kenneth L.Calvert, M.J. Donaboo著， 周恒民译。 非常好的 Java tcp/ip socket 入门读物， 详细地讲解了相关的知识点，有相应的实例为佐， 并且对底层、性能等方面也作了一定的阐述。 11.《Ubuntu Linux 指南：基础篇》 作者:  Mark G.Sobell.  Linux 系统入门读物。 12.《Perl 语言入门》(第五版)  作者： Randal L.schwartz 等著， 盛春等译。 Perl 入门的推荐教程。通俗易懂、详尽得当。 13.《Java 编程风格》 作者： Alan Vermeulan 等著。 曹铁鸥译。 关于Java 编程的推荐风格。 14.《精通正则表达式》 作者： Jeffrey E.F.Friedl 。 关于正则表达式的深入学习读物。   15.《Java Concurrency in Practice》作者： Brian Goetz 等。  Java 并发编程读物。 16.《单元测试之道Java版：使用JUnit 》 作者： Andrew Hunt,David Thomas.  单元测试的入门读物。 四、 软件开发的可选读物： 1. 《软件工艺》作者：Pete McBreen.  从工艺角度论述软件开发，强调个人开发能力的修炼。最好读英文版， 顺便学学英语。 2. 《人月神话》作者： Frederick P. Brooks, Jr . 作为软件工程领域的经典作品， 无需多说。 3. 《黑客与画家》 作者： Paul Graham.  互联网已经发生了巨大的变化， 但书中观点依然很有启发性， 建议读一读。 4. 《Coders at work --- Reflections on the Craft of Programming》作者： Peter Seibel .   顶级大师的访谈录， 听听他们的声音和工作经历，肯定会受益匪浅。 5.  《设计原本》作者： Frederick P. Brooks, Jr.  著，  InfoQ中文站 / 王海鹏 / 高博 （译）， 关于软件设计、管理方面的优秀读物。 6.  《程序员修炼之道：从小工到专家》作者： Andrew Hunt / David Thomas 。 关于软件开发方法的实践经验谈。 7.  《时间管理：给系统管理员》作者： Thomas A.Limoncelli 。 关于时间管理方面的有益参考，短小而精，适用于所有的软件开发人员。 五、其它 1.   《云计算解码：技术架构和产业运营》 作者：  雷葆华，饶少阳等。 关于云计算方面的入门读物。 2.   《简约至上： 交互式设计四策略》：  理论、方法、细节兼具， 值得一读。</code></pre><p><strong><em>更多精彩文章请关注公众号『大海的BLOG』</em></strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;经典的书都有一个特点： 详尽得当，通俗又不失理论化，信息量非常大。&lt;/p&gt;
&lt;p&gt; &lt;strong&gt;&lt;em&gt;更多精彩文章请关注公众号『大海的BLOG』&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  计算机专业推荐书籍：





  一、 思想类读物：

 
      
    
    </summary>
    
    
    
      <category term="悦读" scheme="https://www.8868866.xyz/tags/%E6%82%A6%E8%AF%BB/"/>
    
  </entry>
  
  <entry>
    <title>ACM大数定理题</title>
    <link href="https://www.8868866.xyz/2020/03/23/36.ACM%E5%A4%A7%E6%95%B0%E5%AE%9A%E7%90%86%E9%A2%98/"/>
    <id>https://www.8868866.xyz/2020/03/23/36.ACM%E5%A4%A7%E6%95%B0%E5%AE%9A%E7%90%86%E9%A2%98/</id>
    <published>2020-03-23T09:41:36.000Z</published>
    <updated>2020-03-23T09:44:45.361Z</updated>
    
    <content type="html"><![CDATA[<p><strong><em>更多精彩文章请关注公众号『大海的BLOG』</em></strong></p><p>Problem Description:</p><p>I have a very simple problem for you. Given two integers A and B, your job is to calculate the sum of A + B. </p><p>Input:</p><p>The first line of the input contains an integer T(1&lt;=T&lt;=20) which means the number of test cases.<br>Then T lines follow, each line consists of two positive integers, A and B. Notice that the integers<br>are very large, that means you should not process them by using 32-bit integer. You may assume<br>the length of each integer will not exceed 1000. </p><p>Output:</p><p>For each test case, you should output two lines. The first line is “Case #:”, # means the number of<br>the test case. The second line is the an equation “A + B = Sum”, Sum means the result of A + B.<br>Note there are some spaces int the equation. Output a blank line between two test cases. </p><p>Sample Input:</p><p>2<br>1 2<br>112233445566778899 998877665544332211 </p><p>Sample Output:</p><p>Case 1: </p><p>1 + 2 = 3 </p><p>Case 2: </p><p>112233445566778899 + 998877665544332211 = 1111111111111111110 </p><p>两种答法：<br>①:</p><pre class=" language-cpp"><code class="language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream></span></span><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;stack></span></span><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;strstream></span></span><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;string></span></span>usingnamespace std<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">int</span> num<span class="token punctuation">;</span>cin<span class="token operator">>></span>num<span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>num<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">int</span> a<span class="token punctuation">,</span>psize<span class="token punctuation">,</span>qsize<span class="token punctuation">,</span>n<span class="token punctuation">,</span>m<span class="token punctuation">;</span>stack<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span>zp<span class="token punctuation">;</span>stack<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span>zq<span class="token punctuation">;</span>stack<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span>z<span class="token punctuation">;</span>string p<span class="token punctuation">,</span>q<span class="token punctuation">;</span>cin<span class="token operator">>></span>p<span class="token operator">>></span>q<span class="token punctuation">;</span><span class="token keyword">char</span><span class="token operator">*</span>w<span class="token operator">=</span><span class="token operator">&amp;</span>p<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">char</span><span class="token operator">*</span>e<span class="token operator">=</span><span class="token operator">&amp;</span>q<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>psize<span class="token operator">=</span><span class="token function">strlen</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span><span class="token punctuation">;</span>qsize<span class="token operator">=</span><span class="token function">strlen</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>k<span class="token operator">&lt;</span>psize<span class="token punctuation">;</span>k<span class="token operator">++</span><span class="token punctuation">)</span>zp<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">(</span>p<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">48</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>k<span class="token operator">&lt;</span>qsize<span class="token punctuation">;</span>k<span class="token operator">++</span><span class="token punctuation">)</span>zq<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">(</span>q<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">48</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>n<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token operator">!</span>zp<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token operator">!</span>zq<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>zp<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>zq<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>m<span class="token operator">=</span>zp<span class="token punctuation">.</span><span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span>zq<span class="token punctuation">.</span><span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span>n<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>m<span class="token operator">>=</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">{</span>z<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>m<span class="token number">-10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>n<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>z<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span>n<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span>zp<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span>zq<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span>n<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span>z<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">else</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>zp<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token operator">!</span>zp<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>zp<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>m<span class="token operator">=</span>zp<span class="token punctuation">.</span><span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span>n<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>m<span class="token operator">>=</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">{</span>z<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>m<span class="token number">-10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>n<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>z<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span>n<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>zq<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token operator">!</span>zq<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>zq<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>m<span class="token operator">=</span>n<span class="token operator">+</span>zq<span class="token punctuation">.</span><span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>m<span class="token operator">>=</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">{</span>z<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>m<span class="token number">-10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>n<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>z<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span>n<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span>cout<span class="token operator">&lt;&lt;</span><span class="token string">"Case "</span><span class="token operator">&lt;&lt;</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token string">":"</span> <span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>cout<span class="token operator">&lt;&lt;</span>p<span class="token operator">&lt;&lt;</span><span class="token string">" + "</span><span class="token operator">&lt;&lt;</span>q<span class="token operator">&lt;&lt;</span><span class="token string">" = "</span> <span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token operator">!</span>z<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>z<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>cout<span class="token operator">&lt;&lt;</span>z<span class="token punctuation">.</span><span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>cout<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">!=</span>num<span class="token number">-1</span><span class="token punctuation">)</span>cout<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>②：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>math<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span>     <span class="token punctuation">{</span>        Scanner sc<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Scanner</span> <span class="token punctuation">(</span>System<span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> t<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>t<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">!=</span><span class="token number">1</span><span class="token punctuation">)</span> System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            BigInteger a<span class="token punctuation">,</span>b<span class="token punctuation">;</span>            a<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextBigInteger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            b<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextBigInteger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Case "</span><span class="token operator">+</span>i<span class="token operator">+</span><span class="token string">":"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token operator">+</span><span class="token string">" + "</span><span class="token operator">+</span>b<span class="token operator">+</span><span class="token string">" = "</span><span class="token operator">+</span>a<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><strong><em>更多精彩文章请关注公众号『大海的BLOG』</em></strong></p>]]></content>
    
    <summary type="html">
    
      ACM大数定理题，C++和Java两种答法
    
    </summary>
    
    
      <category term="随想" scheme="https://www.8868866.xyz/categories/%E9%9A%8F%E6%83%B3/"/>
    
    
  </entry>
  
  <entry>
    <title>PHP编写解决主页被劫持的dos脚本</title>
    <link href="https://www.8868866.xyz/2020/03/23/35.%E8%A7%A3%E5%86%B3%E4%B8%BB%E9%A1%B5%E8%A2%AB%E5%8A%AB%E6%8C%81%E7%9A%84dos%E8%84%9A%E6%9C%AC/"/>
    <id>https://www.8868866.xyz/2020/03/23/35.%E8%A7%A3%E5%86%B3%E4%B8%BB%E9%A1%B5%E8%A2%AB%E5%8A%AB%E6%8C%81%E7%9A%84dos%E8%84%9A%E6%9C%AC/</id>
    <published>2020-03-23T09:34:46.000Z</published>
    <updated>2020-03-23T10:05:32.702Z</updated>
    
    <content type="html"><![CDATA[<p><strong><em>更多精彩文章请关注公众号『大海的BLOG』</em></strong></p><p><strong>1、编写语言：PHP<br>2、使用范围：浏览器主页被其他主页劫持<br>3、使用方法：复制代码→新建文档、保存→右键重命名→更改后缀名为bat→右键以管理员身份运行</strong></p><pre class=" language-php"><code class="language-php"><span class="token keyword">echo</span> off<span class="token punctuation">:</span>begincls<span class="token keyword">Echo</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token keyword">Echo</span> I   <span class="token number">1</span> 判断病毒文件和注册表      I<span class="token keyword">Echo</span> I   <span class="token number">2</span> ie首页相关                I<span class="token keyword">Echo</span> I   <span class="token number">3</span> 修复ie首页                I<span class="token keyword">Echo</span> I   <span class="token number">4</span> 打开浏览器配置目录        I<span class="token keyword">Echo</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>Set <span class="token operator">/</span>P <span class="token keyword">var</span><span class="token operator">=</span><span class="token keyword">If</span> not <span class="token string">"%var%"</span><span class="token operator">==</span><span class="token string">""</span> <span class="token punctuation">(</span>  <span class="token keyword">If</span> <span class="token string">"%var%"</span><span class="token operator">==</span><span class="token string">"1"</span>  <span class="token keyword">goto</span> 判断  <span class="token keyword">If</span> <span class="token string">"%var%"</span><span class="token operator">==</span><span class="token string">"2"</span>  <span class="token keyword">goto</span> ie首页  <span class="token keyword">If</span> <span class="token string">"%var%"</span><span class="token operator">==</span><span class="token string">"3"</span>  <span class="token keyword">goto</span> 修复ie首页  <span class="token keyword">If</span> <span class="token string">"%var%"</span><span class="token operator">==</span><span class="token string">"4"</span>  <span class="token keyword">goto</span> 打开浏览器配置目录<span class="token punctuation">)</span><span class="token keyword">goto</span> <span class="token punctuation">:</span>begin<span class="token punctuation">:</span>判断<span class="token keyword">echo</span> 判断病毒文件和注册表等<span class="token keyword">if</span> exist <span class="token string">"%ProgramFiles%\Common Files\System\safemonn64.dll"</span> <span class="token keyword">echo</span> safemonn64<span class="token punctuation">.</span>dll safemonn64<span class="token punctuation">.</span>dll  存在<span class="token keyword">if</span> exist <span class="token operator">%</span>windir<span class="token operator">%</span>\<span class="token package">AppPatch<span class="token punctuation">\</span>MexLayout</span><span class="token punctuation">.</span>dll <span class="token keyword">echo</span> MexLayout<span class="token punctuation">.</span>dll  存在<span class="token keyword">if</span> exist <span class="token operator">%</span>windir<span class="token operator">%</span>\<span class="token package">system32<span class="token punctuation">\</span>usb4399</span><span class="token punctuation">.</span>sys <span class="token keyword">echo</span> usb4399<span class="token punctuation">.</span>sys  存在reg query <span class="token string">"HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\usb4399"</span><span class="token keyword">if</span> exist <span class="token operator">%</span>windir<span class="token operator">%</span>\<span class="token package">system32<span class="token punctuation">\</span>DRIVERS<span class="token punctuation">\</span>usb4399</span><span class="token punctuation">.</span>sys <span class="token keyword">echo</span> usb4399<span class="token punctuation">.</span>sys  存在reg query <span class="token string">"HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\usb4399"</span><span class="token keyword">if</span> exist <span class="token operator">%</span>windir<span class="token operator">%</span>\<span class="token package">system32<span class="token punctuation">\</span>fhdisbfasu</span><span class="token punctuation">.</span>sys <span class="token keyword">echo</span> fhdisbfasu<span class="token punctuation">.</span>sys  存在reg query <span class="token string">"HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\fhdisbfasu"</span><span class="token keyword">if</span> exist <span class="token operator">%</span>windir<span class="token operator">%</span>\<span class="token package">system32<span class="token punctuation">\</span>FDSOIvdaosifid</span><span class="token punctuation">.</span>sys <span class="token keyword">echo</span> FDSOIvdaosifid<span class="token punctuation">.</span>sys  存在reg query <span class="token string">"HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\FDSOIvdaosifid"</span><span class="token keyword">if</span> exist <span class="token operator">%</span>windir<span class="token operator">%</span>\<span class="token package">system32<span class="token punctuation">\</span>DRIVERS<span class="token punctuation">\</span>PGFltMgr</span><span class="token punctuation">.</span>sys <span class="token keyword">echo</span> PGFltMgr<span class="token punctuation">.</span>sys  存在reg query <span class="token string">"HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\PGFltMgr"</span><span class="token keyword">if</span> exist <span class="token operator">%</span>windir<span class="token operator">%</span>\<span class="token package">system32<span class="token punctuation">\</span>DRIVERS<span class="token punctuation">\</span>mssafel</span><span class="token punctuation">.</span>sys <span class="token keyword">echo</span> mssafel<span class="token punctuation">.</span>sys  存在reg query <span class="token string">"HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\mssafel"</span><span class="token keyword">if</span> exist <span class="token operator">%</span>windir<span class="token operator">%</span>\<span class="token package">System32<span class="token punctuation">\</span>GroupPolicy<span class="token punctuation">\</span>Machine<span class="token punctuation">\</span>Registry</span><span class="token punctuation">.</span>pol <span class="token keyword">echo</span> Registry<span class="token punctuation">.</span>pol  存在reg query <span class="token string">"HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Google\Chrome"</span> <span class="token operator">/</span>v DefaultSearchProviderSearchURLdir  <span class="token operator">%</span>windir<span class="token operator">%</span>\<span class="token package">system32<span class="token punctuation">\</span>DRIVERS<span class="token punctuation">\</span>usb</span><span class="token operator">*</span><span class="token punctuation">.</span>sysdir  <span class="token operator">%</span>windir<span class="token operator">%</span>\<span class="token package">system32<span class="token punctuation">\</span>DRIVERS<span class="token punctuation">\</span>hp</span><span class="token operator">*</span><span class="token punctuation">.</span>sys<span class="token keyword">if</span> exist <span class="token operator">%</span>appdata<span class="token operator">%</span>\<span class="token package">pcmaster</span> <span class="token keyword">echo</span> 软媒魔方  存在reg query <span class="token constant">HKEY_CURRENT_USER</span>\<span class="token package">Software<span class="token punctuation">\</span>RuanMei</span><span class="token keyword">echo</span> <span class="token constant">UC</span>浏览器推广idreg query <span class="token string">"HKEY_LOCAL_MACHINE\Software\Wow6432Node\UCBrowserPID"</span>reg query <span class="token string">"HKEY_CURRENT_USER\Software\UCBrowserPID"</span><span class="token keyword">echo</span> <span class="token constant">UC</span>浏览器配置文件<span class="token keyword">if</span> exist <span class="token string">"C:\Program Files (x86)\UCBrowser\Application\Share\Custom.dat"</span> <span class="token keyword">echo</span> Custom<span class="token punctuation">.</span>dat  存在<span class="token keyword">if</span> exist <span class="token string">"C:\Program Files (x86)\UCBrowser\Application\Share\Config.dat"</span> <span class="token keyword">echo</span> Config<span class="token punctuation">.</span>dat  存在<span class="token keyword">goto</span> exit<span class="token punctuation">:</span>ie首页<span class="token keyword">echo</span> ie首页其他reg query <span class="token string">"HKEY_CURRENT_USER\Software\Microsoft\Internet Explorer\Main"</span> <span class="token operator">/</span>v <span class="token string">"Start Page"</span>reg query <span class="token string">"HKEY_CURRENT_USER\Software\Microsoft\Internet Explorer\Main"</span> <span class="token operator">/</span>v <span class="token string">"Search Bar"</span>reg query <span class="token string">"HKEY_CURRENT_USER\Software\Microsoft\Internet Explorer\Main"</span> <span class="token operator">/</span>v <span class="token string">"Search Page"</span>reg query <span class="token string">"HKEY_CURRENT_USER\Software\Microsoft\Internet Explorer\Main"</span> <span class="token operator">/</span>v <span class="token string">"Default_Page_URL"</span>reg query <span class="token string">"HKEY_CURRENT_USER\Software\Microsoft\Internet Explorer\Main"</span> <span class="token operator">/</span>v <span class="token string">"Default_Search_URL"</span>reg query <span class="token string">"HKEY_LOCAL_MACHINE\Software\Microsoft\Internet Explorer\Main"</span> <span class="token operator">/</span>v <span class="token string">"Start Page"</span>reg query <span class="token string">"HKEY_LOCAL_MACHINE\Software\Microsoft\Internet Explorer\Main"</span> <span class="token operator">/</span>v <span class="token string">"Search Bar"</span>reg query <span class="token string">"HKEY_LOCAL_MACHINE\Software\Microsoft\Internet Explorer\Main"</span> <span class="token operator">/</span>v <span class="token string">"Search Page"</span>reg query <span class="token string">"HKEY_LOCAL_MACHINE\Software\Microsoft\Internet Explorer\Main"</span> <span class="token operator">/</span>v <span class="token string">"Default_Page_URL"</span>reg query <span class="token string">"HKEY_LOCAL_MACHINE\Software\Microsoft\Internet Explorer\Main"</span> <span class="token operator">/</span>v <span class="token string">"Default_Search_URL"</span>reg query <span class="token string">"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\Internet Explorer\MAIN"</span> <span class="token operator">/</span>v <span class="token string">"Start Page"</span>reg query <span class="token string">"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\Internet Explorer\MAIN"</span> <span class="token operator">/</span>v <span class="token string">"Search Bar"</span>reg query <span class="token string">"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\Internet Explorer\MAIN"</span> <span class="token operator">/</span>v <span class="token string">"Search Page"</span>reg query <span class="token string">"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\Internet Explorer\MAIN"</span> <span class="token operator">/</span>v <span class="token string">"Default_Page_URL"</span>reg query <span class="token string">"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\Internet Explorer\MAIN"</span> <span class="token operator">/</span>v <span class="token string">"Default_Search_URL"</span>reg query <span class="token string">"HKEY_CLASSES_ROOT\CLSID\{871C5380-42A0-1069-A2EA-08002B30309D}\shell\OpenHomePage\Command"</span><span class="token keyword">echo</span> Windows10 禁止修改首页<span class="token punctuation">(</span>如果内包含内容<span class="token punctuation">)</span>reg query <span class="token string">"HKEY_CURRENT_USER\SOFTWARE\Policies\Microsoft\Internet Explorer\Main\SecondaryStartPages"</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token constant">HKEY_CLASSES_ROOT</span>\<span class="token package">Local</span> Settings\<span class="token package">Software<span class="token punctuation">\</span>Microsoft<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>CurrentVersion<span class="token punctuation">\</span>AppContainer<span class="token punctuation">\</span>Storage<span class="token punctuation">\</span>microsoft</span><span class="token punctuation">.</span>microsoftedge_8wekyb3d8bbwe\<span class="token package">Children<span class="token punctuation">\</span>001<span class="token punctuation">\</span>Internet</span> Explorer<span class="token punctuation">]</span><span class="token keyword">echo</span> 禁用更改主页设置 正常值“HomePage”的<span class="token constant">DWORD</span>值，值为“<span class="token number">00000000</span>”reg query <span class="token string">"HKEY_CURRENT_USER\Software\Policies\Microsoft\Internet Explorer\Control Panel"</span> <span class="token operator">/</span>v <span class="token string">"HomePage"</span>reg query <span class="token string">"HKEY_LOCAL_MACHINE\Software\Policies\Microsoft\Internet Explorer\Control Panel"</span> <span class="token operator">/</span>v <span class="token string">"HomePage"</span><span class="token keyword">echo</span> ie首页修改后无法保存reg query <span class="token string">"HKEY_CURRENT_USER\SOFTWARE\Policies\Microsoft\Internet Explorer\Main"</span> <span class="token operator">/</span>v <span class="token string">"Start Page"</span>reg query <span class="token string">"HKEY_CURRENT_USER\Software\Policies\Microsoft\Internet Explorer\Main"</span> <span class="token operator">/</span>v <span class="token string">"First Home Page"</span>reg query <span class="token string">"HKEY_CURRENT_USER\Software\Policies\Microsoft\Internet Explorer\Main"</span> <span class="token operator">/</span>v <span class="token string">"Default_Page_URL"</span>reg query <span class="token string">"HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Internet Explorer\Main"</span> <span class="token operator">/</span>v <span class="token string">"Start Page"</span>reg query <span class="token string">"HKEY_LOCAL_MACHINE\Software\Policies\Microsoft\Internet Explorer\Main"</span> <span class="token operator">/</span>v <span class="token string">"First Home Page"</span>reg query <span class="token string">"HKEY_LOCAL_MACHINE\Software\Policies\Microsoft\Internet Explorer\Main"</span> <span class="token operator">/</span>v <span class="token string">"Default_Page_URL"</span><span class="token keyword">echo</span> Windows10中查看到的现象reg query "<span class="token constant">HKEY_CURRENT_USER</span>\<span class="token package">SOFTWARE<span class="token punctuation">\</span>Policies<span class="token punctuation">\</span>Microsoft<span class="token punctuation">\</span>Internet</span> Explorer\<span class="token package">Main</span><span class="token keyword">echo</span> 继续查看其他<span class="token constant">IE</span>配置路径pause<span class="token package">echo</span> 其他<span class="token constant">IE</span>配置路径reg query <span class="token string">"HKEY_LOCAL_MACHINE\Software\Microsoft\Internet Explorer\Main"</span>reg query <span class="token string">"HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Internet Explorer"</span>reg query <span class="token string">"HKEY_LOCAL_MACHINE\Software\Policies\Microsoft\Internet Explorer\Main"</span>reg query <span class="token string">"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\Internet Explorer\MAIN"</span>reg query <span class="token string">"HKEY_LOCAL_MACHINE\Software\Policies\Microsoft\Internet Explorer\Control Panel"</span>reg query <span class="token string">"HKEY_CURRENT_USER\Software\Microsoft\Internet Explorer\Main"</span>reg query <span class="token string">"HKEY_CURRENT_USER\Software\Policies\Microsoft\Internet Explorer"</span>reg query <span class="token string">"HKEY_CURRENT_USER\Software\Policies\Microsoft\Internet Explorer\Main"</span>reg query <span class="token string">"HKEY_CURRENT_USER\Software\Policies\Microsoft\Internet Explorer\Control Panel"</span><span class="token keyword">goto</span> exit<span class="token punctuation">:</span>修复ie首页<span class="token keyword">echo</span> 修复禁用更改主页设置reg <span class="token constant">DELETE</span> <span class="token string">"HKEY_CURRENT_USER\Software\Policies\Microsoft\Internet Explorer\Control Panel"</span> <span class="token operator">/</span>f <span class="token operator">/</span>v <span class="token string">"HomePage"</span>reg <span class="token constant">DELETE</span> <span class="token string">"HKEY_LOCAL_MACHINE\Software\Policies\Microsoft\Internet Explorer\Control Panel"</span> <span class="token operator">/</span>f <span class="token operator">/</span>v <span class="token string">"HomePage"</span><span class="token keyword">echo</span> 修复ie首页修改后无法保存reg <span class="token constant">DELETE</span> <span class="token string">"HKEY_CURRENT_USER\Software\Policies\Microsoft\Internet Explorer\Main"</span> <span class="token operator">/</span>f <span class="token operator">/</span>v <span class="token string">"Start Page"</span>reg <span class="token constant">DELETE</span> <span class="token string">"HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Internet Explorer\Main"</span> <span class="token operator">/</span>f <span class="token operator">/</span>v <span class="token string">"Start Page"</span>reg <span class="token constant">DELETE</span> <span class="token string">"HKEY_LOCAL_MACHINE\Software\Policies\Microsoft\Internet Explorer\Main"</span> <span class="token operator">/</span>f <span class="token operator">/</span>v <span class="token string">"First Home Page"</span>reg <span class="token constant">DELETE</span> <span class="token string">"HKEY_LOCAL_MACHINE\Software\Policies\Microsoft\Internet Explorer\Main"</span> <span class="token operator">/</span>f <span class="token operator">/</span>v <span class="token string">"Default_Page_URL"</span>reg <span class="token constant">DELETE</span> <span class="token string">"HKEY_CURRENT_USER\Software\Microsoft\Internet Explorer\Main"</span> <span class="token operator">/</span>f <span class="token operator">/</span>v <span class="token string">"Start Page"</span>reg <span class="token constant">DELETE</span> <span class="token string">"HKEY_CURRENT_USER\Software\Microsoft\Internet Explorer\Main"</span> <span class="token operator">/</span>f <span class="token operator">/</span>v <span class="token string">"Search Bar"</span>reg <span class="token constant">DELETE</span> <span class="token string">"HKEY_CURRENT_USER\Software\Microsoft\Internet Explorer\Main"</span> <span class="token operator">/</span>f <span class="token operator">/</span>v <span class="token string">"Search Page"</span>reg <span class="token constant">DELETE</span> <span class="token string">"HKEY_CURRENT_USER\Software\Microsoft\Internet Explorer\Main"</span> <span class="token operator">/</span>f <span class="token operator">/</span>v <span class="token string">"Default_Page_URL"</span>reg <span class="token constant">DELETE</span> <span class="token string">"HKEY_CURRENT_USER\Software\Microsoft\Internet Explorer\Main"</span> <span class="token operator">/</span>f <span class="token operator">/</span>v <span class="token string">"Default_Search_URL"</span>reg <span class="token constant">DELETE</span> <span class="token string">"HKEY_LOCAL_MACHINE\Software\Microsoft\Internet Explorer\Main"</span> <span class="token operator">/</span>f <span class="token operator">/</span>v <span class="token string">"Start Page"</span>reg <span class="token constant">DELETE</span> <span class="token string">"HKEY_LOCAL_MACHINE\Software\Microsoft\Internet Explorer\Main"</span> <span class="token operator">/</span>f <span class="token operator">/</span>v <span class="token string">"Search Bar"</span>reg <span class="token constant">DELETE</span> <span class="token string">"HKEY_LOCAL_MACHINE\Software\Microsoft\Internet Explorer\Main"</span> <span class="token operator">/</span>f <span class="token operator">/</span>v <span class="token string">"Search Page"</span>reg <span class="token constant">DELETE</span> <span class="token string">"HKEY_LOCAL_MACHINE\Software\Microsoft\Internet Explorer\Main"</span> <span class="token operator">/</span>f <span class="token operator">/</span>v <span class="token string">"Default_Page_URL"</span>reg <span class="token constant">DELETE</span> <span class="token string">"HKEY_LOCAL_MACHINE\Software\Microsoft\Internet Explorer\Main"</span> <span class="token operator">/</span>f <span class="token operator">/</span>v <span class="token string">"Default_Search_URL"</span>reg <span class="token constant">DELETE</span> <span class="token string">"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\Internet Explorer\MAIN"</span> <span class="token operator">/</span>f <span class="token operator">/</span>v <span class="token string">"Start Page"</span>reg <span class="token constant">DELETE</span> <span class="token string">"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\Internet Explorer\MAIN"</span> <span class="token operator">/</span>f <span class="token operator">/</span>v <span class="token string">"Search Bar"</span>reg <span class="token constant">DELETE</span> <span class="token string">"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\Internet Explorer\MAIN"</span> <span class="token operator">/</span>f <span class="token operator">/</span>v <span class="token string">"Search Page"</span>reg <span class="token constant">DELETE</span> <span class="token string">"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\Internet Explorer\MAIN"</span> <span class="token operator">/</span>f <span class="token operator">/</span>v <span class="token string">"Default_Page_URL"</span>reg <span class="token constant">DELETE</span> <span class="token string">"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\Internet Explorer\MAIN"</span> <span class="token operator">/</span>f <span class="token operator">/</span>v <span class="token string">"Default_Search_URL"</span><span class="token punctuation">:</span><span class="token punctuation">:</span>edge homepagereg <span class="token constant">DELETE</span> <span class="token string">"HKEY_CURRENT_USER\Software\Microsoft\Internet Explorer\EUPP"</span> <span class="token operator">/</span>freg <span class="token constant">DELETE</span> <span class="token string">"HKEY_CLASSES_ROOT\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppContainer\Storage\microsoft.microsoftedge_8wekyb3d8bbwe\MicrosoftEdge\Protected - It is a violation of Windows Policy to modify. See aka.ms/browserpolicy"</span> <span class="token operator">/</span>freg <span class="token constant">DELETE</span> <span class="token string">"HKEY_CURRENT_USER\Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppContainer\Storage\microsoft.microsoftedge_8wekyb3d8bbwe\MicrosoftEdge\Protected - It is a violation of Windows Policy to modify. See aka.ms/browserpolicy"</span> <span class="token operator">/</span>f<span class="token keyword">goto</span> exit<span class="token punctuation">:</span>打开浏览器配置目录<span class="token keyword">echo</span> 打开浏览器配置目录<span class="token keyword">if</span> exist <span class="token string">"%USERPROFILE%\AppData\Roaming\Mozilla\Firefox\Profiles"</span> explorer <span class="token string">"%USERPROFILE%\AppData\Roaming\Mozilla\Firefox\Profiles"</span>    <span class="token punctuation">:</span><span class="token punctuation">:</span> 该目录删除后并不影响配置 <span class="token operator">></span> <span class="token operator">%</span><span class="token constant">USERPROFILE</span><span class="token operator">%</span>\<span class="token package">AppData<span class="token punctuation">\</span>Local<span class="token punctuation">\</span>Mozilla</span>    <span class="token punctuation">:</span><span class="token punctuation">:</span>\<span class="token package">xxxxxxxx</span><span class="token punctuation">.</span><span class="token keyword">default</span>\<span class="token package">prefs</span><span class="token punctuation">.</span>js    <span class="token punctuation">:</span><span class="token punctuation">:</span>\<span class="token package">xxxxxxxx</span><span class="token punctuation">.</span><span class="token keyword">default</span>\<span class="token package">user</span><span class="token punctuation">.</span>js<span class="token keyword">if</span> exist <span class="token string">"%USERPROFILE%\AppData\Local\Google\Chrome"</span>              explorer <span class="token string">"%USERPROFILE%\AppData\Local\Google\Chrome"</span><span class="token keyword">if</span> exist <span class="token string">"%USERPROFILE%\AppData\Roaming\360se6"</span>                   explorer <span class="token string">"%USERPROFILE%\AppData\Roaming\360se6"</span><span class="token keyword">if</span> exist <span class="token string">"%USERPROFILE%\AppData\Local\360Chrome\Chrome"</span>           explorer <span class="token string">"%USERPROFILE%\AppData\Local\360Chrome\Chrome"</span><span class="token keyword">if</span> exist <span class="token string">"%USERPROFILE%\AppData\Roaming\SogouExplorer"</span>            explorer <span class="token string">"%USERPROFILE%\AppData\Roaming\SogouExplorer"</span><span class="token keyword">if</span> exist <span class="token string">"%USERPROFILE%\AppData\Local\2345Explorer"</span>               explorer <span class="token string">"%USERPROFILE%\AppData\Local\2345Explorer"</span><span class="token keyword">if</span> exist <span class="token string">"%USERPROFILE%\AppData\Local\Tencent\QQBrowser"</span>          explorer <span class="token string">"%USERPROFILE%\AppData\Local\Tencent\QQBrowser"</span><span class="token keyword">if</span> exist <span class="token string">"%USERPROFILE%\AppData\Local\UCBrowser"</span>                  explorer <span class="token string">"%USERPROFILE%\AppData\Local\UCBrowser"</span><span class="token keyword">if</span> exist <span class="token string">"%ProgramFiles%\Internet Explorer"</span>                       explorer <span class="token string">"%ProgramFiles%\Internet Explorer"</span><span class="token keyword">goto</span> exit<span class="token punctuation">:</span>exitpause<span class="token package">goto</span> <span class="token punctuation">:</span>begin</code></pre><p><strong><em>更多精彩文章请关注公众号『大海的BLOG』</em></strong></p>]]></content>
    
    <summary type="html">
    
      解决主页被劫持的dos脚本
    
    </summary>
    
    
      <category term="技术" scheme="https://www.8868866.xyz/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="随想" scheme="https://www.8868866.xyz/categories/%E6%8A%80%E6%9C%AF/%E9%9A%8F%E6%83%B3/"/>
    
      <category term="微软" scheme="https://www.8868866.xyz/categories/%E6%8A%80%E6%9C%AF/%E9%9A%8F%E6%83%B3/%E5%BE%AE%E8%BD%AF/"/>
    
    
      <category term="脚本类" scheme="https://www.8868866.xyz/tags/%E8%84%9A%E6%9C%AC%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title>C++详解Pow函数</title>
    <link href="https://www.8868866.xyz/2020/03/23/34.C-%E8%AF%A6%E8%A7%A3Pow%E5%87%BD%E6%95%B0/"/>
    <id>https://www.8868866.xyz/2020/03/23/34.C-%E8%AF%A6%E8%A7%A3Pow%E5%87%BD%E6%95%B0/</id>
    <published>2020-03-23T09:28:33.000Z</published>
    <updated>2020-03-23T10:04:46.330Z</updated>
    
    <content type="html"><![CDATA[<p><strong><em>更多精彩文章请关注公众号『大海的BLOG』</em></strong></p><p><strong>这是一道求水仙花数的变形体：<br>描述：水仙花一朵x元，问有n元最多能买多少符合水仙花数朵水仙花？<br>输入：两个整数n（100&lt;=n&lt;=999）,x（1&lt;=x&lt;=n）。<br>输出：输出符合要求的数，没有就输出-1。<br>说明：水仙花数：一个三位数其各位数字的立方和等于这个三位数。<br>例1：<br>输入：452 2<br>输出：153<br>例2：<br>输入：999 1<br>输出：407</strong></p><pre class=" language-cpp"><code class="language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> n<span class="token punctuation">,</span>x<span class="token punctuation">;</span>    <span class="token keyword">int</span> ans<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>ams<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    cin <span class="token operator">>></span> n <span class="token operator">>></span> x<span class="token punctuation">;</span>    <span class="token keyword">int</span> m<span class="token punctuation">;</span>    m<span class="token operator">=</span>n<span class="token operator">/</span>x<span class="token punctuation">;</span>    <span class="token keyword">int</span> a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>m<span class="token operator">&lt;</span><span class="token number">100</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        cout <span class="token operator">&lt;&lt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>m<span class="token operator">&lt;</span><span class="token number">1000</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">&lt;=</span><span class="token number">999</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            a<span class="token operator">=</span>i<span class="token operator">/</span><span class="token number">100</span><span class="token punctuation">;</span>            b<span class="token operator">=</span>i<span class="token operator">/</span><span class="token number">10</span><span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">;</span>            c<span class="token operator">=</span>i<span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> toal<span class="token operator">=</span>a<span class="token operator">*</span>a<span class="token operator">*</span>a<span class="token operator">+</span>b<span class="token operator">*</span>b<span class="token operator">*</span>b<span class="token operator">+</span>c<span class="token operator">*</span>c<span class="token operator">*</span>c<span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>toal<span class="token operator">==</span>i<span class="token punctuation">)</span>            <span class="token punctuation">{</span>                ans<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>                ams<span class="token operator">=</span>i<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">else</span>    <span class="token punctuation">{</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">&lt;=</span>m<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            a<span class="token operator">=</span>i<span class="token operator">/</span><span class="token number">100</span><span class="token punctuation">;</span>            b<span class="token operator">=</span>i<span class="token operator">/</span><span class="token number">10</span><span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">;</span>            c<span class="token operator">=</span>i<span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> toal<span class="token operator">=</span>a<span class="token operator">*</span>a<span class="token operator">*</span>a<span class="token operator">+</span>b<span class="token operator">*</span>b<span class="token operator">*</span>b<span class="token operator">+</span>c<span class="token operator">*</span>c<span class="token operator">*</span>c<span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>toal<span class="token operator">==</span>i<span class="token punctuation">)</span>            <span class="token punctuation">{</span>                ans<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>                ams<span class="token operator">=</span>i<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>ans<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        cout <span class="token operator">&lt;&lt;</span> ams <span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">else</span>    <span class="token punctuation">{</span>        cout <span class="token operator">&lt;&lt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p><del>··································分····················割···············线·································································</del><br><strong>这里是原型：<br>将所给两数范围内的所有水仙花数，从小到大依次输出。</strong></p><pre class=" language-cpp"><code class="language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream></span></span><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;math.h></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">SXH</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> B <span class="token operator">=</span> x <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">,</span> S <span class="token operator">=</span> <span class="token punctuation">(</span>x <span class="token operator">-</span> B <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">,</span> G <span class="token operator">=</span> x <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token operator">==</span><span class="token function">pow</span><span class="token punctuation">(</span>G<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">pow</span><span class="token punctuation">(</span>S<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">pow</span><span class="token punctuation">(</span>B<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">else</span> <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> m<span class="token punctuation">,</span> n<span class="token punctuation">;</span>    <span class="token keyword">int</span> a<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>cin <span class="token operator">>></span> m<span class="token punctuation">,</span>cin <span class="token operator">>></span> n<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>m<span class="token punctuation">;</span> m <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> m<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">SXH</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> m<span class="token punctuation">;</span>                i<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>           <span class="token punctuation">}</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            cout <span class="token operator">&lt;&lt;</span> a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">&lt;</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">' '</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span>cout <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            cout <span class="token operator">&lt;&lt;</span> <span class="token string">"no"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>需要注意的是第二个原型题的代码中用到的pow函数：<br>头文件   ：#include &lt;math.h&gt;<br>作用      ：pow() 函数用来求 x 的 y 次幂（次方），x、y及函数值都是double型。<br>其原型为：double pow(double x, double y);<br>说明：<br>pow()用来计算以x 为底的 y 次方值，然后将结果返回。设返回值为 ret，则 ret = xy。</p><p>可能导致错误的情况：<br>如果底数 x 为负数并且指数 y 不是整数，将会导致 domain error 错误。<br>如果底数 x 和指数 y 都是 0，可能会导致 domain error 错误，这跟库函数实现有关。<br>如果底数 x 是 0，指数 y 是负数，可能会导致 domain error 或 pole error 错误，这也跟库函数实现有关。<br>如果返回值 ret 太大或者太小，将会导致 range error 错误。</p><p>错误代码：<br>如果发生 domain error 错误，那么全局变量 errno 将被设置为  EDOM；<br>如果发生 pole error 或 range error 错误，那么全局变量 errno 将被设置为 ERANGE。<br>Math.pow(底数,几次方)<br>如：<br>double a=2.0;<br>    double b=3.0;<br>double c=pow(a,b);<br>c最终为8.0；</p><p><strong><em>更多精彩文章请关注公众号『大海的BLOG』</em></strong></p>]]></content>
    
    <summary type="html">
    
      C++详解Pow函数
    
    </summary>
    
    
      <category term="随想" scheme="https://www.8868866.xyz/categories/%E9%9A%8F%E6%83%B3/"/>
    
    
      <category term="语言类" scheme="https://www.8868866.xyz/tags/%E8%AF%AD%E8%A8%80%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title>PICNIC-V.2.0.0_一款给天空加滤镜的APP</title>
    <link href="https://www.8868866.xyz/2020/03/23/2.PICNIC-V.2.0.0_%E4%B8%80%E6%AC%BE%E7%BB%99%E5%A4%A9%E7%A9%BA%E5%8A%A0%E6%BB%A4%E9%95%9C%E7%9A%84APP/"/>
    <id>https://www.8868866.xyz/2020/03/23/2.PICNIC-V.2.0.0_%E4%B8%80%E6%AC%BE%E7%BB%99%E5%A4%A9%E7%A9%BA%E5%8A%A0%E6%BB%A4%E9%95%9C%E7%9A%84APP/</id>
    <published>2020-03-23T04:02:16.000Z</published>
    <updated>2020-03-23T04:10:23.784Z</updated>
    
    <content type="html"><![CDATA[<p>虽然我是一个不拍照片的直男，但当我第一次透过picnic看我头顶的天空时，我就决定把它留在我的手机里！（大概也有近两年时间了）</p><p><strong><em>更多精彩文章请关注公众号『大海的BLOG』</em></strong></p><blockquote><h2 id="由于该博客最近搭建，所以只好将我其他平台的作品搬运过来，一些图片上有版权水印也请见谅哈"><a href="#由于该博客最近搭建，所以只好将我其他平台的作品搬运过来，一些图片上有版权水印也请见谅哈" class="headerlink" title="由于该博客最近搭建，所以只好将我其他平台的作品搬运过来，一些图片上有版权水印也请见谅哈"></a>由于该博客最近搭建，所以只好将我其他平台的作品搬运过来，一些图片上有版权水印也请见谅哈</h2></blockquote><h3 id="软件介绍："><a href="#软件介绍：" class="headerlink" title="软件介绍："></a><strong>软件介绍：</strong></h3><p><strong>PICNIC：是一款给天空加上各色滤镜的APP</strong><br><strong>优点：给天空加绝美的滤镜！无广告！打开即用！</strong><br><strong>版本号：v.2.0.0</strong><br><strong>测试机版本号：安卓8.0</strong><br><strong>效果：（不会拍照，这是随手一拍。。。不过按我技术随手和正经拍都一个样）</strong></p><p><img src="https://attach.52pojie.cn/forum/202003/01/233623t428df0qyb82dw22.png" alt="效果图1"></p><p><img src="https://attach.52pojie.cn/forum/202003/01/233626d74fqwcvnpiffonw.png" alt="效果图2"></p><p><strong><center>（左1为原图，另外三个仅仅做测试，不代表picnic的天空滤镜数量）</center>&gt;</strong></p><p><strong>软件运行图：</strong><br><strong>无广告加载界面，直接进入主界面。</strong><br><strong>无复杂功能碍眼，设置、相册、拍照已足矣。</strong></p><p><img src="https://attach.52pojie.cn/forum/202003/01/233628vix4vo8v2dioxdny.png" alt="效果图3"></p><p><strong>主功能很简单（效果真的很好！）就不一一介绍了，一键傻瓜式操作就能拍的漂漂亮亮的天空！</strong><br><strong>下面进入设置界面！</strong><br><strong>我们可以选择是否保留软件的水印、静音拍照、保留位置、取消软件消息通知（但我从来没印象收到过picnic的软件通知。。）</strong></p><p><img src="https://attach.52pojie.cn/forum/202003/01/233630v0pxlcx6cwcvmimx.png" alt="效果图4"></p><p><strong>总之，我是极力推这样的良心软件！</strong></p><p><strong>觉得有意思的朋友快快下载吧~</strong></p><p><strong>下载链接：</strong><br><strong>蓝奏云：</strong><a href="https://www.lanzous.com/i9txiih" target="_blank" rel="noopener">https://www.lanzous.com/i9txiih</a></p><p><strong>百毒云：</strong><br><strong>链接：</strong> <a href="https://pan.baidu.com/s/1u9saCy-0xq1Vv6xUAQMTTA" target="_blank" rel="noopener">https://pan.baidu.com/s/1u9saCy-0xq1Vv6xUAQMTTA</a> <strong>提取码：<code>kgly</code></strong><br><strong>蓝奏云二维码下载：</strong></p><p><img src="https://attach.52pojie.cn/forum/202003/01/233621x6jpr216i6mnpi0j.png" alt="二维码下载"></p><p><strong><em>更多精彩文章请关注公众号『大海的BLOG』</em></strong></p>]]></content>
    
    <summary type="html">
    
      一款能给天空加滤镜的APP
    
    </summary>
    
    
      <category term="安卓" scheme="https://www.8868866.xyz/categories/%E5%AE%89%E5%8D%93/"/>
    
    
  </entry>
  
  <entry>
    <title>重装系统&amp;激活系统</title>
    <link href="https://www.8868866.xyz/2020/03/21/1.%E9%87%8D%E8%A3%85%E7%B3%BB%E7%BB%9F&amp;%E6%BF%80%E6%B4%BB%E7%B3%BB%E7%BB%9F/"/>
    <id>https://www.8868866.xyz/2020/03/21/1.%E9%87%8D%E8%A3%85%E7%B3%BB%E7%BB%9F&amp;%E6%BF%80%E6%B4%BB%E7%B3%BB%E7%BB%9F/</id>
    <published>2020-03-21T08:50:49.000Z</published>
    <updated>2020-03-23T04:09:18.343Z</updated>
    
    <content type="html"><![CDATA[<p>对于刚刚DIY好一台电脑或者对于目前所用windows系统版本不太满意的人来说，下载一个官方、纯净的系统镜像是至关重要的！下面就来看看如何实现这些操作吧。（所有操作均以Win10为例）</p><p><strong><em>更多精彩文章请关注公众号『大海的BLOG』</em></strong></p><h3 id="首先说说为什么官方的系统受人推崇吧"><a href="#首先说说为什么官方的系统受人推崇吧" class="headerlink" title="首先说说为什么官方的系统受人推崇吧:"></a>首先说说为什么官方的系统受人推崇吧:</h3><p><strong>首先说说第三方系统镜像：</strong></p><blockquote><p>第一：由第三方人员在官方的系统的基础上修改而得，由于其中集成了大量工具和软件，较为简单易用，所以流传广泛。但是这<strong>并不能</strong>排除其中包含木马和病毒的可能。最重要的就是其中集成的软件九成都是流氓软件，例如臭名昭著的2345、各种页游等等等(得罪不起不一一点名)。为什么要把这些流氓软件集成到第三方系统去呢？当然是牟利哈，百度一下<strong>2345装机联盟</strong>即可知晓。</p><p>第二：在第三方系统制作人员打包封装系统的时候会把一些驱动或者激活信息封装进去，要知道驱动是和硬件相关联的，每个人的硬件不可能一模一样，即便是“万能驱动”在使用第三方系统的时候也免不了会有因<strong>驱动不匹配或激活信息故障导致蓝屏甚至装机失败。</strong></p></blockquote><p><strong>再来说说官方的系统镜像</strong></p><blockquote><p><strong>完全没毛病！</strong>各种更新版本和系统类别全部由用户自己选择，系统不会有任何第三方流氓软件。</p></blockquote><h3 id="那么该如何获取官方系统镜像呢？"><a href="#那么该如何获取官方系统镜像呢？" class="headerlink" title="那么该如何获取官方系统镜像呢？"></a>那么该如何获取官方系统镜像呢？</h3><p><strong>毫无疑问，微软官方下载就是渠道之一</strong></p><blockquote><p><a href="https://www.microsoft.com/zh-cn/software-download/" target="_blank" rel="noopener">微软官方下载</a></p><p>在微软官方下载会使用MeidaCreationTool下载工具（类似于N卡的GeForceExperience）可以本机升级系统，下载iso镜像到本地、或者下载iso镜像并写入U盘，缺点就是下载速度慢。</p></blockquote><p><strong>还有个下载官方系统的好去处</strong></p><blockquote><p><a href="https://msdn.itellyou.cn/" target="_blank" rel="noopener">MSDN,我告诉你</a></p><p>MSDN,我告诉你：全部采用ed2k开头的链接进行下载，包含SHA1校验信息。而且ed2k下载链接可以使用迅雷、百度网盘等工具进行下载，如果条件允许，下载速度较官方的MCT下载工具相比有显著提升。另外和微软官网的相比，这里的收录相对更全，也更方便查找下载不同的版本。</p><center>冗长的系统选择页面</center>![冗长的系统选择页面](https://i.loli.net/2020/03/21/DCZoOUcTlq6RQBX.gif)</blockquote><p><strong>写给对系统安全格外重视的朋友</strong></p><blockquote><p>你们的担心不无道理，若是连镜像都是残缺或者携带捆绑甚至是病毒，那么装机过程再怎么完美也都是瞎费工夫。所以，大家可以下载一个Hash_MD5的校验工具，将下载的系统镜像拖拽进校验工具的工作窗口对比是否和网站提供的SHA1值一致，不一致则重新下载该镜像。</p><p><a href="https://www.lanzous.com/iahx8gj" target="_blank" rel="noopener">Hash_MD5校验工具</a><strong>密码:</strong><code>ocean</code></p></blockquote><h3 id="下载好系统镜像之后呢？"><a href="#下载好系统镜像之后呢？" class="headerlink" title="下载好系统镜像之后呢？"></a>下载好系统镜像之后呢？</h3><p><strong>需要一个做好”格式化”准备的U盘</strong></p><blockquote><p>你需要准备一个≥16GB的U盘（8GB也可以，但这年头8GB的U盘实属罕见）</p></blockquote><p><strong>下载软碟通</strong></p><blockquote><p><a href="https://www.lanzous.com/iahxp9e" target="_blank" rel="noopener">软碟通单文件免安装版本</a><strong>密码:</strong><code>ocean</code></p></blockquote><p><strong>用下载好的镜像通过软碟通制作一个U盘装机盘</strong></p><blockquote><p>1、右键”以管理员身份运行”软碟通</p><p>2、打开UltraISO的窗口后依次点击左上角的“文件”-“打开”-找到存放镜像文件的目录</p><p>3、选中该目标文件，点击“打开”按钮</p><p>4、插入准备好的U盘</p><p>5、再次回到UltraISO窗口，点击菜单栏中的“启动”选“写入硬盘镜像”</p><p>6、接下来在弹出的窗口直接点击“写入”按钮<strong>(注：将写入方法选择为“USB-HDD+”，如果不是这个模式，可能导致电脑无法通过U盘正常启动。)</strong></p><p>7、静候片刻，软碟通正在将系统的镜像文件数据写入到U盘里</p><p>8、下载<a href="https://www.lanzous.com/iahz5vi" target="_blank" rel="noopener">HWID数字权利激活程序</a><strong>密码:</strong><code>ocean</code>将文件下载到你的U盘里(放在根目录就好，激活系统的时候会比较好找)</p><p>9、做好一切准备后就开始重装系统吧</p></blockquote><h3 id="开始重装系统-以Win10为例"><a href="#开始重装系统-以Win10为例" class="headerlink" title="开始重装系统(以Win10为例)"></a>开始重装系统(以Win10为例)</h3><p><strong>首先你需要知道你的电脑进入”选择启动项选择”页面的快捷键是什么,或者是进入BIOS系统的快捷键是什么</strong></p><blockquote><center>其他品牌也可以试试比较大众的启动项选择快捷键</center>![各品牌台式机主板笔记本启动项](https://i.loli.net/2020/03/21/IU4vSlsDKrhjBzy.png)</blockquote><p><strong>插入U盘，在按下电源键的瞬间请用最快手速狂戳对应电脑/主板的快捷键，比如大众一点的按键<code>F12/Delete</code></strong></p><blockquote><p>按下后请选择你插入的U盘的名字，比如是金士顿的64GBU盘那么它的名字就类似Kingston-flashdisk-64GB</p><p>或者是其他检测不到品牌的U盘，你可以找FlashDisk、储存量等闪存的关键字样</p></blockquote><p><strong>因为我们是直接用软碟通将镜像写入了U盘，所以不同于一些进PE系统装机的教程</strong></p><blockquote><p>不同于PE装机，我们则会直接进入到经典的Windows系统安装界面：</p><p>1、选择语言后点击下一步-选择要安装的系统版本（如果你下载的是整合版、就是多个版本和在一起的镜像，那么就会出现这个页面供你选择），例如win10会有教育版、企业版、专业版三种供你选择，默认选专业版。</p><p>2、安装类型选择”自定义：仅安装Windows(高级)(C)”后自动进入”你想将windows安装在哪里？”页面</p><p>3、选中类型名为”主分区”的驱动器，你可以选择先将其格式化，再点击下一步。也可选中后直接下一步，效果应该是大差不差的</p><p>4、等待系统安装</p><p>5、成功进入系统，开始个性设置。</p></blockquote><h3 id="系统激活-以Win10为例"><a href="#系统激活-以Win10为例" class="headerlink" title="系统激活(以Win10为例)"></a>系统激活(以Win10为例)</h3><p><strong>开心的进入系统并开始进行个性设置时突然发现，这个系统还没有激活，该怎么办？</strong></p><blockquote><p>在此之前，我先介绍一下早在制作好U盘启动盘时让你们下载的<a href="https://www.lanzous.com/iahz5vi" target="_blank" rel="noopener">HWID数字权利激活程序</a><strong>密码:</strong><code>ocean</code>吧</p><p><strong>以前：</strong>在还没有出现数字权利工具的时候，某知名网站（软慧网）上有大神写过一个Windows10专业版数字权利获取方法，即使现在教程用途不太大，不过有兴趣的可以去看一下。传送门：<a href="https://www.ruanhuicn.com/key/" target="_blank" rel="noopener">https://www.ruanhuicn.com/key/</a></p><p><strong>如今：</strong>到后来国外某知名论坛传出win10数字权利工具–HWIDGEN</p><center>win10数字权利工具--HWIDGEN</center>![win10数字权利工具--HWIDGEN](https://i.loli.net/2020/03/21/61ejxSHT9IMGvyF.png)<p>在HWID出现之后，数字权利激活Windows10并不是难事了，只需要进行简单的点击操作就可以得到一个数字权利激活成功的Windows系统。</p><p><strong>科普：</strong>数字权利，是针对Windows10系统而言的一种激活方式。全称“使用数字许可证激活” 使用数字权利激活和普通激活方式有什么区别呢？十分重要的一点就是数字权利激活后支持重装，即在重装系统之后可以自动激活系统，保持正版！当然前提条件就是重装系统的时候需要保持和获取数字权利的系统版本保持一致并且需要确保没有更换硬件！<strong>可以简单的认为数字权利激活是永久激活！</strong>区别于kms激活，数字权利是永久的，无需90天循环和kms服务器，风险系数更小。</p><p><strong>HWID支持的版本：</strong>除Windows10 LTSC 2019 和Windows10 server系列系统外，换句话说：适用于大多数Windows10系统，例如win10家庭版、专业版、ltsb2016等等……</p></blockquote><p><strong>win10数字权利工具–HWIDGEN的使用方法</strong></p><blockquote><blockquote><ul><li><strong>确保电脑能正常联网</strong>，网络正常稳定以确保能够成功连接微软服务器</li><li>尽量<strong>关闭360、电脑管家之类的杀毒软件</strong>，防止软件被吞无法使用</li><li>确保<strong>Windows update服务已开启(这一项无需关心，系统默认都是开启update服务的)未被禁用</strong>，禁用过的请开启后使用。激活成功后可关闭。</li><li>打开软件，在工作模式选择HWID，然后点击开始即可</li><li>只能用于Windows10系统，其他系统无效。</li><li>Windows10 LTSC 2019 和 Server版本可以在工作模式切换KMS38进行激活</li></ul></blockquote></blockquote><p><strong>总结一下使用HWID激活的步骤：</strong>先把HWID从你的U盘里拉倒桌面，然后按照上述方法操作激活，成功后就可以把HWID删掉了。</p><p><strong><em>更多精彩文章请关注公众号『大海的BLOG』</em></strong></p>]]></content>
    
    <summary type="html">
    
      如何重装系统并激活系统
    
    </summary>
    
    
      <category term="微软" scheme="https://www.8868866.xyz/categories/%E5%BE%AE%E8%BD%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>C语言编写贪吃蛇游戏</title>
    <link href="https://www.8868866.xyz/2020/03/21/7.C%E8%AF%AD%E8%A8%80%E7%BC%96%E5%86%99%E8%B4%AA%E5%90%83%E8%9B%87%E6%B8%B8%E6%88%8F/"/>
    <id>https://www.8868866.xyz/2020/03/21/7.C%E8%AF%AD%E8%A8%80%E7%BC%96%E5%86%99%E8%B4%AA%E5%90%83%E8%9B%87%E6%B8%B8%E6%88%8F/</id>
    <published>2020-03-20T17:38:04.000Z</published>
    <updated>2020-03-23T06:17:18.095Z</updated>
    
    <content type="html"><![CDATA[<p><strong>你问我为什么要用c写贪吃蛇游戏？一切都要从那次作业讲起。。。</strong></p><p><strong><em>更多精彩文章请关注公众号『大海的BLOG』</em></strong></p><h3 id="背景："><a href="#背景：" class="headerlink" title="背景："></a>背景：</h3><blockquote><p>大一上半年，C程序设计老师布置了一个程序设计作业，于是诞生了这篇代码。</p></blockquote><h3 id="IDE："><a href="#IDE：" class="headerlink" title="IDE："></a>IDE：</h3><blockquote><p>VisualStudio2017社区版</p></blockquote><h3 id="字符集："><a href="#字符集：" class="headerlink" title="字符集："></a>字符集：</h3><blockquote><p>使用多字节字符集</p></blockquote><h3 id="辅助工具："><a href="#辅助工具：" class="headerlink" title="辅助工具："></a>辅助工具：</h3><blockquote><p>EasyX图形库2018春分版</p></blockquote><h3 id="PS："><a href="#PS：" class="headerlink" title="PS："></a>PS：</h3><p>   <strong>1、因为当时想得高分就以为搞点花里胡哨的就不错（哈哈最后混了个优，乐死我了），所以我编写了账号注册、登录系统、调用了多媒体接口以登录游戏时播放背景音乐、高分榜系统以及附带的升序降序排行函数：</strong></p><p>​            ①账号注册、登录系统、高分榜系统的数据全部分别保存在默认添加创建的Users.dat,scores.dat里，所以要借鉴的朋友需要手动在IDE里添加这两个文件（对应名称可以自己改，但一定要对应到代码里，否则会fp指针调用文件出错）；</p><p>​          ②关于背景音乐：我添加的背景音乐的资源就不放到帖子上了（名字叫silver city，好听，哈哈哈），所以要借鉴源码的朋友需要自己了解一下“如何添加MP3格式的音乐到代码”的问题，然后对代码第328行进行改写;</p><p>​    <strong>2、操作问题：因为我喜欢玩FPS游戏，所以定义的上下左右是wsad（小写，一定要把输入法切换为小写英文状态，否则蛇死亡），所以不习惯的朋友可以重新定义为键盘方向键（需要了解一下键盘虚拟键值，然后改对应的switch语句，代码量应该还是挺大的）。</strong></p><p>​    <strong>3、EasyX图形库：（这段是复制我设计报告的23333333）在我决定用EasyX库的图形函数来绘制地图之前，对于这个模块的编写有很多问题：譬如单用gotoxy()函数实现绘制地图的话，一片黑白，惨不忍睹；而且也会成几何倍的增加代码量：尤其是for循环语句和printf语句会多不胜数。从而就会导致不仅开发人员降低对于代码的可读性，而且从头至尾的黑白界面无疑会劝退很多玩家，降低可玩性。在我用EasyX来绘制地图后，测试的过程只能用两个字来形容：真香！EasyX的一个moveto()配合一个for循环代替了多不胜数的gotoxy()函数和for循环。这不仅大大缩减了代码量，而且图形编程的优点“多彩化”也得以体现。在调试过程中我对for循环进行了优化：一个进行边界的上下绘制，另一个负责左右的绘制，实现了不仅减少了代码量而且没有破坏不影响可读性的前提。</strong></p><p>​    <strong>4、应程序设计老师要求，基本上能达到每个功能、每个函数甚至每一句都有一条注释。。。（想想都要吐了）</strong></p><hr><p><strong>放代码吧：</strong></p><pre class=" language-c++"><code class="language-c++">#include <stdio.h>                        //C语言标准输入输出头文件#include <graphics.h>                // easyx图形库头文件#include <conio.h>                        //获取数据头文件（getch()和kbhit()）#include <windows.h>                //使用其中的Sleep函数控制循环的时间，system("cls")函数来清屏#include <stdlib.h>                        //调用了srand()随机函数#include <time.h>                        //使用当前时钟做随机种子#include <mmsystem.h>                //多媒体设备接口头文件#pragma comment (lib,"winmm.lib")//首先进行一堆宏定义//定义地图大小#define frame_height 30 #define frame_width 30//定义操作键，小写的wasd控制上左下右#define UP 'w' #define DOWN 's'#define LEFT 'a'#define RIGHT 'd'//控制台的点是单位点，不考虑大小，我们用的easyx绘制像素点为了将单位点在图形界面上放大为一个正方形，系数转换×16可以把一个单位点放大成正方形。16可以是任意数，相应的会放大或缩小所有的像素点。#define SIZE 16#define N 4//声明fp是指针，用来指向FILE类型的对象。FILE *fp;int i, j, k, m, n, s[N];char s1[4], s2[4];//蛇的初始方向char ch = UP;//定义一个全局变量，来判断蛇是否成长，成长则速度加快。grow值也相应增加。int grow = 0;//食物的坐标struct Food {        int x;        int y;}food;//蛇的信息：snake[0]是蛇头，len为蛇的长度，speed蛇的速度struct Snake {        int x[50];        int y[50];        int len;        int speed;}snake;//用于储存用户账号密码typedef struct The_users{        char id[11]; //账号        char pwd[20];//密码}users;users a, b;//新建结构体成员变量,用来登陆与注册//此处声明变量void init_map(void);void update_food(void);void move_snake(void);int is_alive(void);void get_speed(void);void gotoxy(int x, int y);void redraw_map(void);void menu();void registers();void Login();//void Create_File();void score();int compInc(const void *a, const void *b);int compDec(const void *a, const void *b);//主函数位置int main(){        initgraph(640, 480);        //创建绘图窗口，长640.        menu();                                        //调用菜单函数        score();                                //调用得分函数        return 0;}//再次绘制地图（根据宏定义中的宽和高）void redraw_map(void){        for (j = 0; j < frame_width; j++)                        //该for循环用于绘制地图的上下边界，根据width宽来从左往右、先上后下依次绘制。        {                moveto(j*SIZE, 0);                                                //将画笔移动到(j*SIZE,0)的位置开始进行下面的绘图，另外(j*SIZE)是将单位点放大SIZE（16）倍                setfillcolor(BLUE);                                                //定义上边界为蓝色                fillrectangle(j*SIZE, 0, j*SIZE + SIZE, SIZE);        //绘制矩形                moveto(j*SIZE, (frame_height - 1)*SIZE);//再次移动画笔                setfillcolor(BLUE);                                                //定义下边界为蓝色                fillrectangle(j*SIZE, (frame_height - 1)*SIZE, j*SIZE + SIZE, (frame_height - 1)*SIZE + SIZE);//绘制矩形        }        for (i = 1; i < frame_height - 1; i++)//次循环绘制地图左右剩余的28个矩形方块,先左后右，从上至下！        {                moveto(0, i*SIZE);                                //画笔移动到(0,i*SIZE)                setfillcolor(BLUE);                                //定义左边界为蓝色                fillrectangle(0, i*SIZE, 0 + SIZE, i*SIZE + SIZE);                moveto((frame_width - 1)*SIZE, i*SIZE);//再次移动画笔                setfillcolor(BLUE);                                        //定义右边界为蓝色                fillrectangle((frame_width - 1)*SIZE, i*SIZE, (frame_width - 1)*SIZE + SIZE, i*SIZE + SIZE); //绘制矩形        }}//然后初始化地图内容void init_map(void){        //初始化食物        srand((unsigned int)time(NULL));//用srand函数集结合time.h头文件中的time来生成随机数        food.x = rand() % (frame_height - 2) + 1;//在1~（frameheight-2）之间随机生成一个食物的横坐标        food.y = rand() % (frame_width - 2) + 1;//在1~（framewidth -2）之间随机生成一个食物的纵坐标        moveto(food.y*SIZE, food.x*SIZE);                //将画笔移动到该随机坐标        setfillcolor(RED);                                                //定义食物为红色        fillcircle(food.y *SIZE + SIZE / 2, food.x*SIZE + SIZE / 2, SIZE / 2);                //定义食物形状为以(food.y *SIZE + SIZE / 2, food.x*SIZE + SIZE / 2)为圆心，SIZE/2为半径的圆形        //初始化蛇        snake.x[0] = (frame_height) / 2;//初始化蛇头横坐标位置        snake.y[0] = (frame_width) / 2;//初始化蛇头纵坐标位置        moveto(snake.y[0] * SIZE, snake.x[0] * SIZE);//画笔移动到蛇头坐标        setfillcolor(GREEN);                        //定义蛇的初始颜色为绿色        fillcircle(snake.y[0] * SIZE + SIZE / 2, snake.x[0] * SIZE + SIZE / 2, SIZE / 2);//画蛇        snake.len = 3;                                                //初始化蛇的节数为3节        snake.speed = 200;                                        //初始化蛇的速度        for (k = 1; k < snake.len; k++)                //用for循环画出蛇剩余的节数        {                snake.x[k] = snake.x[k - 1] + 1;                snake.y[k] = snake.y[k - 1];                moveto(snake.y[k] * SIZE, snake.x[k] * SIZE);                setfillcolor(GREEN);                fillcircle(snake.y[k] * SIZE + SIZE / 2, snake.x[k] * SIZE + SIZE / 2, SIZE / 2);        }}//生成食物void update_food(){        if (snake.x[0] == food.x&&snake.y[0] == food.y)//首先保证每次随机的食物不能刚好随机到蛇头所在坐标        {                food.x = rand() % (frame_height - 2) + 1;                food.y = rand() % (frame_width - 2) + 1;                for (k = 1; k < snake.len; k++)                {                        if (snake.x[k] == food.x&&snake.y[k] == food.y)//判断蛇头坐标等于随机食物的坐标 即：吃到食物                        {                                food.x = rand() % (frame_height - 2) + 1;//再次随机生成食物                                food.y = rand() % (frame_width - 2) + 1;                        }                }                moveto(food.y*SIZE, food.x*SIZE);//移动画笔到随机食物的坐标                setfillcolor(RED);                                //定义食物颜色为红色                fillcircle(food.y*SIZE + SIZE / 2, food.x*SIZE + SIZE / 2, SIZE / 2);                //定义食物为圆形                snake.len++;                                        //蛇的长度加一                grow = 1;                                                //给全局变量grow赋值1        }}//蛇的移动void move_snake(){        if (_kbhit())//kbhit判断键盘输入的虚拟键值                ch = _getch();//将方向键值表现为对应的方向        if (!grow)//此时grow值若为零则执行if语句，不为零则不执行        {                moveto(snake.y[snake.len - 1] * SIZE, snake.x[snake.len - 1] * SIZE);                setfillcolor(BLACK);                solidrectangle(snake.y[snake.len - 1] * SIZE, snake.x[snake.len - 1] * SIZE, snake.y[snake.len - 1] * SIZE + SIZE, snake.x[snake.len - 1] * SIZE + SIZE);        }        for (k = snake.len - 1; k > 0; k--)        {                snake.x[k] = snake.x[k - 1];                snake.y[k] = snake.y[k - 1];        }        switch (ch)        {        case UP:  snake.x[0]--; break;        case DOWN: snake.x[0]++; break;        case LEFT:  snake.y[0]--; break;        case RIGHT:  snake.y[0]++; break;        default:  break;                                        //其他按键直接导致死亡        }        moveto(snake.y[0] * SIZE, snake.x[0] * SIZE);        setfillcolor(GREEN);        fillcircle(snake.y[0] * SIZE + SIZE / 2, snake.x[0] * SIZE + SIZE / 2, SIZE / 2);        grow = 0;}//判断是否存活int is_alive(void){        if (snake.x[0] == 0 || snake.x[0] == frame_height - 1 || snake.y[0] == frame_width - 1 || snake.y[0] == 0)//判断是否撞墙                return 0;                //死        for (k = 1; k < snake.len; k++)                if (snake.x[k] == snake.x[0] && snake.y[k] == snake.y[0])//判断蛇头是否撞到蛇的身体                        return 0;        //死        return 1;                        //活}//通过节数来提升速度void get_speed(void){        if (snake.len <= 6)                snake.speed = 200;        else if (snake.len <= 10)                snake.speed = 100;        else if (snake.len <= 20)                snake.speed = 50;        else if (snake.len <= 30)                snake.speed = 30;        else snake.speed = 20;}//移动光标void gotoxy(int x, int y){        HANDLE hout;        COORD cor;        hout = GetStdHandle(STD_OUTPUT_HANDLE);        cor.X = y;        cor.Y = x;        SetConsoleCursorPosition(hout, cor);}//进入界面void menu(){        InputBox(s1, 4, "输入数字以选择目的：\n1.开始游戏\n2.高分榜\n3.退出游戏\n游戏说明：wasd控制上左下右(小写)", "疯狂的蛇——海制作", NULL, 0, 0, false);        int x, y[3];        sscanf_s(s1, "%d", &x);//将用户输入转化为数字        if (x == 1)        {                InputBox(s2, 4, "输入数字以选择目的：\n1.注册账号\n2.登陆游戏", "疯狂的蛇——海制作");                sscanf_s(s2, "%d", &x);                if (x == 1) {                        registers();                        Login();                }                else if (x == 2) {                        Login();                }                init_map(); //初始化地图                while (1)                {                        update_food();                        get_speed();                        move_snake();                        redraw_map();                        Sleep(snake.speed);                        if (!(is_alive()))                                break;                }                closegraph();                                                //关闭游戏窗口                printf("哈哈小辣鸡，游戏结束!\n");                printf("你的得分：%d", snake.len - 3);//得分=(蛇死亡前节数len)-(蛇的初始节数3)                _getch();        }        else if (x == 2)        {                closegraph();                                                //关闭游戏窗口                printf("                    排行榜\n");                fopen_s(&fp, "scores.dat", "r");                for (x = 0; x < N - 1; x++) {                        fscanf_s(fp, "%d", &y[x]);                        printf("%d\n", y[x]);                }                fclose(fp);                _getch();        }        else//输入3或其他除了1、2任意键均退出游戏        {                closegraph();        }}//注册系统void registers(){        fopen_s(&fp, "Users.dat", "r");        fscanf_s(fp, "%s%s", b.id, sizeof(b.id), b.pwd, sizeof(b.pwd));        InputBox(a.id, 11, "请输入你的账号：", "疯狂的蛇——海制作");        while (1)        {                if (strcmp(a.id, b.id) != 0)//如果两串字符串不相等                {                        if (!feof(fp))//如果未至文件末尾,它的工作原理是，站在光标所在位置，向后看看还有没有字符。如果有，返回0；如果没有，返回非0。它并不会读取相关信息，只是查看光标后是否还有内容。                        {                                fscanf_s(fp, "%s%s", b.id, sizeof(b.id), b.pwd, sizeof(b.pwd));                        }                        else break;                }                else                {                        outtextxy(220, 200, "此用户名已被注册");                        fclose(fp);                        _getch();                        exit(0);                }        }        fclose(fp);        InputBox(a.pwd, 10, "请输入你的密码：", "疯狂的蛇——海制作");        fopen_s(&fp, "Users.dat", "a");        fprintf_s(fp, "%s %s\n", a.id, a.pwd);        outtextxy(220, 200, "奥利给！恭喜你！账号注册成功！");        fclose(fp);}//登陆账号密码，登录时播放bgm嘿嘿sao起来void Login(){        mciSendString("open SC.mp3 alias BIGOcean", 0, 0, 0);        mciSendString("play BIGOcean repeat", 0, 0, 0);        fopen_s(&fp, "Users.dat", "r");        fscanf_s(fp, "%s%s", b.id, sizeof(b.id), b.pwd, sizeof(b.pwd));        InputBox(a.id, 11, "请输入账号", "疯狂的蛇——海制作");        while (1)        {                if (strcmp(a.id, b.id) == 0) break;//如果找到了这个用户名                else                {                        if (!feof(fp))//如果文件未读完                                fscanf_s(fp, "%s%s", b.id, sizeof(b.id), b.pwd, sizeof(b.pwd));                        else                        {                                outtextxy(220, 200, "此用户名不存在!");                                fclose(fp);                                _getch();                                exit(0);                        }                }        }        InputBox(a.pwd, 20, "请输入密码", "疯狂的蛇——海制作");        if (strcmp(a.pwd, b.pwd) == 0)//如果密码匹配        {                fclose(fp);                outtextxy(250, 200, "登陆成功！奥利给！");                initgraph(640, 480);        }        else        {                outtextxy(220, 200, "STFU!密码不正确");                _getch();                exit(0);        }}//分数系统void score(){        fopen_s(&fp, "scores.dat", "r");        for (n = 0; n < N - 1; n++)        {                fscanf_s(fp, "%d", &m);                s[n] = m;        }        s[N - 1] = snake.len - 3;        qsort(s, N, sizeof(s[0]), compDec);        fclose(fp);        fopen_s(&fp, "scores.dat", "w");        for (n = 0; n < N - 1; n++)        {                fprintf_s(fp, "%d\n", s[n]);        }        fclose(fp);}//分数的排序//升序排序int compInc(const void *a, const void *b){        return *(int *)a - *(int *)b;}//降序排序int compDec(const void *a, const void *b) {        return *(int *)b - *(int *)a;}</code></pre><p><strong><em>更多精彩文章请关注公众号『大海的BLOG』</em></strong></p>]]></content>
    
    <summary type="html">
    
      C语言编写贪吃蛇游戏
    
    </summary>
    
    
      <category term="技术" scheme="https://www.8868866.xyz/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="语言类" scheme="https://www.8868866.xyz/tags/%E8%AF%AD%E8%A8%80%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title>算法分析量--时间复杂度</title>
    <link href="https://www.8868866.xyz/2020/03/21/8.%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90%E9%87%8F-%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6/"/>
    <id>https://www.8868866.xyz/2020/03/21/8.%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90%E9%87%8F-%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6/</id>
    <published>2020-03-20T16:17:01.000Z</published>
    <updated>2020-03-23T06:19:52.305Z</updated>
    
    <content type="html"><![CDATA[<p><strong><em>更多精彩文章请关注公众号『大海的BLOG』</em></strong></p><p>文章创造背景：我们知道时间复杂度是学习算法的基石，但还是有很多朋友对这个概念不很理解，那么我们就来聊聊它如何“刻画”出一个算法的运行损耗的时间量。</p><blockquote><h3 id="文章叙述方式："><a href="#文章叙述方式：" class="headerlink" title="文章叙述方式："></a>文章叙述方式：</h3><p>我会用一种对话方式尽可能让对于时间复杂度还不懂的朋友清晰明了的对它建立概念。</p><h3 id="文章对话人物："><a href="#文章对话人物：" class="headerlink" title="文章对话人物："></a>文章对话人物：</h3><p>秦老师、大海同学。</p><h3 id="文章内容分配："><a href="#文章内容分配：" class="headerlink" title="文章内容分配："></a>文章内容分配：</h3><p>我将内容分为三个部分：<br>                                                         一：如何刻画一个算法消耗的时间量？<br>                                                         二：时间复杂度的概念怎么得出来的？<br>                                                         三：如何去计算一个算法的时间复杂度？</p></blockquote><hr><p><strong><center> 一：如何刻画一个算法消耗的时间量？ </center></strong></p><p><img src="https://i.loli.net/2020/03/20/ZjDApaJdohRSW7s.png" alt="对话1"><br><img src="https://i.loli.net/2020/03/21/bL4zArIgvcMV6WE.png" alt="对话2"></p><blockquote><center>为了方便朋友们看清楚，我把截图单独拉出来</center></blockquote><p><img src="https://i.loli.net/2020/03/21/SiL27DqdI8Mlkew.png" alt="插图1"><br><img src="https://i.loli.net/2020/03/21/wFdNMvce9ACgW1m.png" alt="对话3"><br><strong><center> 二：时间复杂度的概念怎么得出来的？ </center></strong><br><img src="https://i.loli.net/2020/03/21/ybt1zsgxEGTVYD5.png" alt="对话4"></p><blockquote><center>为了方便朋友们看清楚，我把截图单独拉出来</center></blockquote><p><img src="https://i.loli.net/2020/03/21/5sMtQi9VerGRU3S.png" alt="插图2"><br><img src="https://i.loli.net/2020/03/21/9T1OpMCjs3SRuVw.png" alt="对话5"><br><strong><center> 三：如何去计算一个算法的时间复杂度？ </center></strong><br><img src="https://i.loli.net/2020/03/21/1V6ZdEpfRncJx8t.png" alt="对话6"><br><img src="https://i.loli.net/2020/03/21/xdCXKkOosrH24b3.png" alt="对话7"></p><blockquote><center>为了方便朋友们看清楚，我把截图单独拉出来</center></blockquote><p><img src="https://i.loli.net/2020/03/21/Tb8zhHRcWgQ5e1n.png" alt="插图3"><br><img src="https://i.loli.net/2020/03/21/64o3aY5zK29OQTd.png" alt="对话8"><br><img src="https://i.loli.net/2020/03/21/vpNVqFJo9Un2DP1.png" alt="对话9"></p><hr><p><strong>至此呢，关于我对时间复杂度理解的文章已暂时完结！<br>感谢秦老师和大海同学助力！</strong></p><p><strong><em>更多精彩文章请关注公众号『大海的BLOG』</em></strong></p>]]></content>
    
    <summary type="html">
    
      算法分析量--时间复杂度
    
    </summary>
    
    
      <category term="技术" scheme="https://www.8868866.xyz/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="算法类" scheme="https://www.8868866.xyz/tags/%E7%AE%97%E6%B3%95%E7%B1%BB/"/>
    
      <category term="语言类" scheme="https://www.8868866.xyz/tags/%E8%AF%AD%E8%A8%80%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title>多线程如何获取结果</title>
    <link href="https://www.8868866.xyz/2020/03/18/29.%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E7%BB%93%E6%9E%9C/"/>
    <id>https://www.8868866.xyz/2020/03/18/29.%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E7%BB%93%E6%9E%9C/</id>
    <published>2020-03-18T12:53:03.000Z</published>
    <updated>2020-03-23T09:14:28.923Z</updated>
    
    <content type="html"><![CDATA[<p>多线程如何获取结果？</p><p><strong><em>更多精彩文章请关注公众号『大海的BLOG』</em></strong></p><h2 id="1-场景"><a href="#1-场景" class="headerlink" title="1.场景"></a>1.场景</h2><p>大家一般都会开启多线程去处理任务，如果需要获取线程处理结果怎么办？</p><p>有人会说『全局变量』，但是又会引出共享全局变量后资源竞争导致数据错误的问题。只能通过添加互斥锁进行解决，互斥锁又不能发挥多线程的优势，很是头大。</p><p>那么该如何解决呢？</p><h2 id="2-解决办法"><a href="#2-解决办法" class="headerlink" title="2.解决办法"></a>2.解决办法</h2><p>可以自定义一个类解决：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> threading<span class="token keyword">class</span> <span class="token class-name">MyThread</span><span class="token punctuation">(</span>threading<span class="token punctuation">.</span>Thread<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> func<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">:</span>        super<span class="token punctuation">(</span>MyThread<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>func <span class="token operator">=</span> func        self<span class="token punctuation">.</span>args <span class="token operator">=</span> args        self<span class="token punctuation">.</span>result <span class="token operator">=</span> self<span class="token punctuation">.</span>func<span class="token punctuation">(</span><span class="token operator">*</span>self<span class="token punctuation">.</span>args<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">get_result</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        threading<span class="token punctuation">.</span>Thread<span class="token punctuation">.</span>join<span class="token punctuation">(</span>self<span class="token punctuation">)</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> self<span class="token punctuation">.</span>result        <span class="token keyword">except</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> None</code></pre><p><strong>使用方式</strong>：直接创建一个对象 <code>thread</code>，在使用方法 <code>thread.start()</code> 后，再调用 <code>get_result()</code> 方法即可获取。</p><p><strong><em>更多精彩文章请关注公众号『大海的BLOG』</em></strong></p>]]></content>
    
    <summary type="html">
    
      多线程如何获取结果？
    
    </summary>
    
    
      <category term="技术" scheme="https://www.8868866.xyz/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="语言类" scheme="https://www.8868866.xyz/tags/%E8%AF%AD%E8%A8%80%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title>复用Django应用，使其可以通过pip安装</title>
    <link href="https://www.8868866.xyz/2020/03/13/31.%E5%A4%8D%E7%94%A8Django%E5%BA%94%E7%94%A8%EF%BC%8C%E4%BD%BF%E5%85%B6%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87pip%E5%AE%89%E8%A3%85/"/>
    <id>https://www.8868866.xyz/2020/03/13/31.%E5%A4%8D%E7%94%A8Django%E5%BA%94%E7%94%A8%EF%BC%8C%E4%BD%BF%E5%85%B6%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87pip%E5%AE%89%E8%A3%85/</id>
    <published>2020-03-13T11:53:44.000Z</published>
    <updated>2020-03-23T09:19:02.754Z</updated>
    
    <content type="html"><![CDATA[<p>想自己打包一个应用，可以像其他模块一样通过 <code>pip install</code> 安装吗？在 <code>Django</code> 项目中，一个应用如果通过此方式随用随安装是不是很帅气？快来看一下如何操作吧！</p><p><strong><em>更多精彩文章请关注公众号『大海的BLOG』</em></strong></p><h1 id="1-前提"><a href="#1-前提" class="headerlink" title="1.前提"></a>1.前提</h1><h2 id="1-1应用规范"><a href="#1-1应用规范" class="headerlink" title="1.1应用规范"></a>1.1应用规范</h2><p>为了方便打包，你的应用应该解耦合，并且所有文件都规范放置。其中需要注意：按照 <code>Django3.0</code> 官方文档描述，每个应用中的模板文件 <code>templates</code> 应与主项目中通用模板文件 <code>templates</code> 分离，最主要目的是为了创建可复用应用。</p><blockquote><p>官方文档原文：Just like the static files, we could have all our templates together, in one big templates directory, and it would work perfectly well. However, templates that belong to a particular application should be placed in that application’s template directory.</p></blockquote><p><strong>保证应用所需文件全部包含在应用目录中</strong>即可开始操作。</p><h2 id="1-2-环境"><a href="#1-2-环境" class="headerlink" title="1.2 环境"></a>1.2 环境</h2><p>安装模块：</p><pre class=" language-shell"><code class="language-shell"> pip install setuptools  pip install wheel</code></pre><h1 id="2-操作"><a href="#2-操作" class="headerlink" title="2.操作"></a>2.操作</h1><h2 id="2-1-准备文件"><a href="#2-1-准备文件" class="headerlink" title="2.1 准备文件"></a>2.1 准备文件</h2><p>比如我要打包应用 <code>polls</code> ：</p><pre class=" language-shell"><code class="language-shell">polls├── __init__.py├── __pycache__│   ├── __init__.cpython-37.pyc│   ├── admin.cpython-37.pyc│   ├── apps.cpython-37.pyc│   ├── models.cpython-37.pyc│   ├── tests.cpython-37.pyc│   ├── urls.cpython-37.pyc│   ├── views.cpython-37.pyc│   └── views_bak.cpython-37.pyc├── admin.py├── apps.py├── migrations│   ├── 0001_initial.py│   ├── __init__.py│   └── __pycache__│       ├── 0001_initial.cpython-37.pyc│       └── __init__.cpython-37.pyc├── models.py├── static│   └── polls│       ├── images│       │   └── 1574779118421.jpg│       └── style.css├── templates│   └── polls│       ├── details.html│       ├── index.html│       └── results.html├── tests.py├── urls.py├── views.py└── views_bak.py # 视图备份文件</code></pre><h3 id="2-1-1-步骤"><a href="#2-1-1-步骤" class="headerlink" title="2.1.1 步骤"></a>2.1.1 步骤</h3><h4 id="2-1-1-1-创建总目录"><a href="#2-1-1-1-创建总目录" class="headerlink" title="2.1.1.1 创建总目录"></a>2.1.1.1 创建总目录</h4><p>1) 创建总目录，比如创建目录 <code>django-polls</code></p><p>2) 然后将应用 <code>polls</code> 移入上方总目录，此时它的目录结构应该是：</p><pre class=" language-shell"><code class="language-shell">django-polls/polls</code></pre><h4 id="2-1-1-2-创建说明文档"><a href="#2-1-1-2-创建说明文档" class="headerlink" title="2.1.1.2 创建说明文档"></a>2.1.1.2 创建说明文档</h4><p>创建说明文档 <code>django-polls/README.rst</code></p><pre class=" language-txt"><code class="language-txt">=====Polls=====Polls is a Django app to conduct Web-based polls. For each question,visitors can choose between a fixed number of answers.Detailed documentation is in the "docs" directory.Quick start-----------1. Add "polls" to your INSTALLED_APPS setting like this::    INSTALLED_APPS = [        ...        'polls',    ]2. Include the polls URLconf in your project urls.py like this::    path('polls/', include('polls.urls')),3. Run ``python manage.py migrate`` to create the polls models.4. Start the development server and visit http://127.0.0.1:8000/admin/   to create a poll (you'll need the Admin app enabled).5. Visit http://127.0.0.1:8000/polls/ to participate in the poll.</code></pre><h4 id="2-1-1-3-创建授权协议文件"><a href="#2-1-1-3-创建授权协议文件" class="headerlink" title="2.1.1.3 创建授权协议文件"></a>2.1.1.3 创建授权协议文件</h4><p>创建一个 <code>django-polls/LICENSE</code> 文件</p><pre class=" language-txt"><code class="language-txt">Copyright (c) 2018 The Python Packaging AuthorityPermission is hereby granted, free of charge, to any person obtaining a copyof this software and associated documentation files (the "Software"), to dealin the Software without restriction, including without limitation the rightsto use, copy, modify, merge, publish, distribute, sublicense, and/or sellcopies of the Software, and to permit persons to whom the Software isfurnished to do so, subject to the following conditions:The above copyright notice and this permission notice shall be included in allcopies or substantial portions of the Software.THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS ORIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THEAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHERLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THESOFTWARE.</code></pre><blockquote><p>协议文件自己可以从网上寻找生成方式</p></blockquote><h4 id="2-1-1-4-创建安装文件"><a href="#2-1-1-4-创建安装文件" class="headerlink" title="2.1.1.4 创建安装文件"></a>2.1.1.4 创建安装文件</h4><p>1) 创建文件 <code>django-polls/setup.cfg</code> （此文件为模块的配置信息，比如作者的姓名、联系方式等）</p><pre class=" language-txt"><code class="language-txt">[metadata]name = django-pollsversion = 0.1description = A Django app to conduct Web-based polls.long_description = file: README.rsturl = https://www.pythonnote.cnauthor = Ethan Yanauthor_email = yanyuliang6@163.comlicense = MIT  # Example licenseclassifiers =    Environment :: Web Environment    Framework :: Django    Framework :: Django :: X.Y  # Replace "X.Y" as appropriate    Intended Audience :: Developers    License :: OSI Approved :: BSD License    Operating System :: OS Independent    Programming Language :: Python    Programming Language :: Python :: 3    Programming Language :: Python :: 3 :: Only    Programming Language :: Python :: 3.6    Programming Language :: Python :: 3.7    Programming Language :: Python :: 3.8    Topic :: Internet :: WWW/HTTP    Topic :: Internet :: WWW/HTTP :: Dynamic Content[options]include_package_data = truepackages = find:</code></pre><p>2) 创建文件 <code>django-polls/setup.py</code> （此文件是为了构建和安装应用）</p><pre class=" language-txt"><code class="language-txt">from setuptools import setupsetup()</code></pre><h4 id="2-1-1-5-创建引用文件"><a href="#2-1-1-5-创建引用文件" class="headerlink" title="2.1.1.5 创建引用文件"></a>2.1.1.5 创建引用文件</h4><p>默认包中只包含 <code>Python</code> 模块和包。为了包含额外文件，我们需要创建一个名为 <code>MANIFEST.in</code> 的文件。为了包含模板、<code>README.rst</code> 和我们的 <code>LICENSE</code> 文件，创建文件 <code>django-polls/MANIFEST.in</code> 包含以下内容：</p><pre class=" language-shell"><code class="language-shell">include LICENSEinclude README.rstrecursive-include polls/static *recursive-include polls/templates *recursive-include docs *</code></pre><blockquote><p><code>docs</code> 目录为文档存放目录，可有可无，视情况而定。如果需要引入其他文件，按照格式在上述文件中补充即可。</p></blockquote><p>最终的目录结构如下：</p><pre class=" language-shell"><code class="language-shell">django-polls├── LICENSE├── MANIFEST.in├── README.rst├── doc├── polls├── setup.cfg└── setup.py</code></pre><h2 id="2-2-打包"><a href="#2-2-打包" class="headerlink" title="2.2 打包"></a>2.2 打包</h2><p>接下来快看一下如何打包吧！</p><p>1) 进入总目录 <code>django-polls</code> 中</p><p>2) 执行如下命令：</p><pre class=" language-shell"><code class="language-shell">python setup.py sdist bdist_wheel</code></pre><p>3) 最终的模块在如下位置：</p><pre class=" language-shell"><code class="language-shell">dist├── django-polls-0.1.tar.gz└── django_polls-0.1-py3-none-any.whl</code></pre><p><code>django-polls-0.1.tar.gz</code> 即打包好的应用。</p><h2 id="2-3-安装使用"><a href="#2-3-安装使用" class="headerlink" title="2.3 安装使用"></a>2.3 安装使用</h2><p>在应用包所在目录执行如下命令即可安装：</p><pre class=" language-shell"><code class="language-shell">python -m pip install django-polls-0.1.tar.gz </code></pre><p>安装后如何在 <code>Django</code> 项目中使用呢？</p><p>1) 在 <code>settings</code> 文件中添加如下应用：</p><pre class=" language-shell"><code class="language-shell">INSTALLED_APPS = [        ...        'polls',    ]</code></pre><p>2) 在 <code>urls</code> 文件中添加如下代码：</p><pre class=" language-shell"><code class="language-shell">path('polls/', include('polls.urls')),</code></pre><p>3) 迁移数据库文件，创建 <code>models</code>：</p><pre class=" language-shell"><code class="language-shell">python manage.py migrate</code></pre><p>然后即可使用。如果想要使用我打包好的应用体验一把，可以在微信公众号「全栈技术精选」后台回复关键字「polls应用包」获取模块。</p><h2 id="2-4-卸载"><a href="#2-4-卸载" class="headerlink" title="2.4 卸载"></a>2.4 卸载</h2><p>卸载：</p><pre class=" language-shell"><code class="language-shell">python -m pip uninstall django-polls</code></pre><p><strong><em>更多精彩文章请关注公众号『大海的BLOG』</em></strong></p>]]></content>
    
    <summary type="html">
    
      Django迁移数据库报错解决
    
    </summary>
    
    
      <category term="技术" scheme="https://www.8868866.xyz/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>Django迁移数据库报错解决</title>
    <link href="https://www.8868866.xyz/2020/03/12/15.Django%E8%BF%81%E7%A7%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3/"/>
    <id>https://www.8868866.xyz/2020/03/12/15.Django%E8%BF%81%E7%A7%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3/</id>
    <published>2020-03-12T12:14:29.000Z</published>
    <updated>2020-03-23T08:27:58.920Z</updated>
    
    <content type="html"><![CDATA[<p><code>Django</code> 最新版本创建应用后，迁移数据库报错怎么办？</p><p><strong><em>更多精彩文章请关注公众号『大海的BLOG』</em></strong></p><h2 id="1-环境"><a href="#1-环境" class="headerlink" title="1.环境"></a>1.环境</h2><p><code>Django3.0.2</code>：</p><pre class=" language-shell"><code class="language-shell">(django_dev) > python -m django --version3.0.2</code></pre><p><code>MySQl8.0.19</code>：</p><pre class=" language-shell"><code class="language-shell">Server version: 8.0.19 MySQL Community Server - GPL</code></pre><p><code>Python3.7.6</code>：</p><pre class=" language-shell"><code class="language-shell">(django_dev) > python --versionPython 3.7.6</code></pre><h2 id="2-报错"><a href="#2-报错" class="headerlink" title="2.报错"></a>2.报错</h2><p>执行命令：</p><pre class=" language-shell"><code class="language-shell">(django_dev) > python manage.py makemigrations polls</code></pre><p>报错信息如下：</p><pre class=" language-shell"><code class="language-shell">django.core.exceptions.ImproperlyConfigured: mysqlclient 1.3.13 or newer is required; you have 0.9.3.</code></pre><p>根据提示，是数据库 <code>MySQL</code> 与 <code>Django</code> 版本不匹配，建议我们升级 <code>mysqlclient</code>。</p><p>首先要说明的是，数据库 <code>MySQL</code> 与 <code>Django</code> 都是最新版本，不存在需要升级的问题。那么问题就应该出现在连接数据库的模块  <code>PyMySQL</code> 上了，但它也是安装的最新版：</p><pre class=" language-shell"><code class="language-shell">(django_dev) > pip install --upgrade PyMySQLLooking in indexes: https://pypi.tuna.tsinghua.edu.cn/simpleRequirement already up-to-date: PyMySQL in /Users/ethanyan/pyenv/django_dev/lib/python3.7/site-packages (0.9.3)</code></pre><blockquote><p>根据提示，该模块并无任何更新可用。</p></blockquote><h2 id="3-解决"><a href="#3-解决" class="headerlink" title="3.解决"></a>3.解决</h2><p>既然外部组件并无问题，接下来核查代码层面。可以根据报错提示，进入底层代码逐个文件查找原因，最终定位到如下文件：</p><pre class=" language-shell"><code class="language-shell">django_dev/lib/python3.7/site-packages/django/db/backends/mysql/base.py</code></pre><blockquote><p><code>django_dev</code> 为项目的虚拟环境。</p></blockquote><p>此文件从第 35 行开始，有如下代码在作怪：</p><pre class=" language-shell"><code class="language-shell">version = Database.version_infoif version < (1, 3, 13):    raise ImproperlyConfigured('mysqlclient 1.3.13 or newer is required; you have %s.' % Database.__version__)</code></pre><p>原来是底层有版本校验！查看其他文件，发现此校验并无关联内容，即可以注释掉，我们进行尝试：</p><pre class=" language-shell"><code class="language-shell"># version = Database.version_info# if version < (1, 3, 13):#     raise ImproperlyConfigured('mysqlclient 1.3.13 or newer is required; you have %s.' % Database.__version__)</code></pre><p>然后再次执行命令：</p><pre class=" language-shell"><code class="language-shell">(django_dev) > python manage.py makemigrations pollsMigrations for 'polls':  polls/migrations/0001_initial.py    - Create model Question    - Create model Choice</code></pre><p>执行成功。</p><p><strong><em>更多精彩文章请关注公众号『大海的BLOG』</em></strong></p>]]></content>
    
    <summary type="html">
    
      Django迁移数据库报错解决
    
    </summary>
    
    
      <category term="技术" scheme="https://www.8868866.xyz/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>python的这些小知识你注意到了吗？</title>
    <link href="https://www.8868866.xyz/2020/03/10/25.python%E7%9A%84%E8%BF%99%E4%BA%9B%E5%B0%8F%E7%9F%A5%E8%AF%86%E4%BD%A0%E6%B3%A8%E6%84%8F%E5%88%B0%E4%BA%86%E5%90%97%EF%BC%9F/"/>
    <id>https://www.8868866.xyz/2020/03/10/25.python%E7%9A%84%E8%BF%99%E4%BA%9B%E5%B0%8F%E7%9F%A5%E8%AF%86%E4%BD%A0%E6%B3%A8%E6%84%8F%E5%88%B0%E4%BA%86%E5%90%97%EF%BC%9F/</id>
    <published>2020-03-10T08:07:41.000Z</published>
    <updated>2020-03-23T08:58:31.092Z</updated>
    
    <content type="html"><![CDATA[<p>本文将对一些小知识进行汇总，这些知识也许你用了 <code>python</code> 很久，但仍然没注意到。</p><p><strong><em>更多精彩文章请关注公众号『大海的BLOG』</em></strong></p><h2 id="1-操作文件的-x-模式"><a href="#1-操作文件的-x-模式" class="headerlink" title="1.操作文件的 x 模式"></a>1.操作文件的 x 模式</h2><p>对文件进行操作的 <code>opend</code> 函数大家都很熟悉，但是你注意到它还有一种模式为 <code>x</code> 吗？</p><p>今天闲的无聊，翻了翻 <code>python</code> 的文档（电脑保存的 <code>python</code> 文档为3.8.2版本），然后发现：不光有 <code>a</code> 、<code>w</code>、<code>b</code> 、<code>r</code> 、<code>+</code> 模式，竟然还有一种模式为 <code>x</code>，下面讲一下吧。</p><p>官方文档称：在 3.3 版本中，增加了 <code>x</code> 模式，它表示创建一个文件，如果文件已经存在，会报错 <code>FileExistsError</code> 。还需要注意一点，在 3.3 版本以后，曾经的 <code>IOError</code> 被别名为 <code>OSError</code>。</p><h2 id="2-协程库-asyncio"><a href="#2-协程库-asyncio" class="headerlink" title="2.协程库 asyncio"></a>2.协程库 asyncio</h2><p>之前常用第三方库 <code>greentlet</code> 和 <code>gevent</code> 来创建协程，后来在 3.4 版本后，<code>python</code> 自身引入了一个协程库 <code>asyncio</code> 。它用来实现异步 <code>I/O</code>。下面看一下示例代码： </p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> asyncio<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main_one</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'hello ...'</span><span class="token punctuation">)</span>    <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'... main_one!'</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main_two</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'hello ...'</span><span class="token punctuation">)</span>    <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'... main_two!'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 创建 task 列表。ensure_future() 函数会返回 task 对象</span>tasks <span class="token operator">=</span> <span class="token punctuation">[</span>asyncio<span class="token punctuation">.</span>ensure_future<span class="token punctuation">(</span>main_one<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>asyncio<span class="token punctuation">.</span>ensure_future<span class="token punctuation">(</span>main_two<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 使用 get_event_loop() 方法创建一个事件循环</span>loop <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>get_event_loop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 多个任务（即 task 列表）使用 wait() 方法执行</span><span class="token comment" spellcheck="true"># 然后再调用 run_until_complete() 函数将协程注册到事件循环中</span>loop<span class="token punctuation">.</span>run_until_complete<span class="token punctuation">(</span>asyncio<span class="token punctuation">.</span>wait<span class="token punctuation">(</span>tasks<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>结果为：</p><pre class=" language-python"><code class="language-python">hello <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>hello <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> main_one!<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> main_two!</code></pre><h2 id="3-装饰器-wraps"><a href="#3-装饰器-wraps" class="headerlink" title="3.装饰器 wraps"></a>3.装饰器 wraps</h2><p>模块 <code>functools</code> 中的 <code>wraps</code> ，会让使用了装饰器的函数伪装的更像原函数，也就是将原函数的属性赋值给使用了装饰器后的原函数。这句话可能比较难理解，我们先来回顾一下什么是装饰器？<strong>装饰器就是在不改变现有函数基础上，为函数增加功能的一个函数，它使用闭包来实现。闭包的规则为在函数内部定义了一个函数，内部函数使用了外部函数的变量，外部函数返回了内部函数的引用。</strong>有一点需要注意：虽然被装饰器装饰的函数仍然可以使用原名称调用，但是其实质上指向了装饰器的内函数。通过以下示例进行说明：</p><p>1) 先来一个普通的装饰器使用示例</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 定义一个装饰器</span><span class="token keyword">def</span> <span class="token function">eg_decorator</span><span class="token punctuation">(</span>func<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">wrapper</span><span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwds<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'我是装饰器啊...'</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> func<span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwds<span class="token punctuation">)</span>    <span class="token keyword">return</span> wrapper<span class="token comment" spellcheck="true"># 使用定义的装饰器装饰函数</span>@eg_decorator<span class="token keyword">def</span> <span class="token function">noname</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'我是示例函数噻...'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 调用函数</span>noname<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 打印函数的 __name__ 属性</span><span class="token keyword">print</span><span class="token punctuation">(</span>noname<span class="token punctuation">.</span>__name__<span class="token punctuation">)</span><span class="token triple-quoted-string string">"""结果是：我是装饰器啊...我是示例函数噻...wrapper"""</span></code></pre><p>可以看到函数 <code>noname()</code> 的属性 <code>__name__</code> 的值为 <code>wrapper</code> ，即函数 <code>noname()</code> 指向的是装饰器的内函数。</p><p>2) 接下来请出今天的主角 <code>wraps</code>：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> functools <span class="token keyword">import</span> wraps  <span class="token comment" spellcheck="true"># &lt;-- 导入模块</span><span class="token comment" spellcheck="true"># 定义一个装饰器</span><span class="token keyword">def</span> <span class="token function">eg_decorator</span><span class="token punctuation">(</span>func<span class="token punctuation">)</span><span class="token punctuation">:</span>    @wraps<span class="token punctuation">(</span>func<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># &lt;-- 使用装饰器</span>    <span class="token keyword">def</span> <span class="token function">wrapper</span><span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwds<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'我是装饰器啊...'</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> func<span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwds<span class="token punctuation">)</span>    <span class="token keyword">return</span> wrapper<span class="token comment" spellcheck="true"># 使用定义的装饰器装饰函数</span>@eg_decorator<span class="token keyword">def</span> <span class="token function">noname</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'我是示例函数噻...'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 调用函数</span>noname<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 打印函数的 __name__ 属性</span><span class="token keyword">print</span><span class="token punctuation">(</span>noname<span class="token punctuation">.</span>__name__<span class="token punctuation">)</span><span class="token triple-quoted-string string">"""结果是：我是装饰器啊...我是示例函数噻...noname"""</span></code></pre><p>可以看到 <code>__name__</code> 属性的值被修改为函数 <code>noname</code> 自己。</p><p>也许大家会问这有什么用？很久很久以前，在一个 <code>Flask</code> 项目中曾经出现过一个 <code>bug</code> ：给视图函数添加了自定义的装饰器之后（该装饰器会验证用户是否登录），再用 <code>@app.route(&quot;/index&quot;)</code> 绑定路径，会报错「你添加路径的视图函数已经绑定了其他路径」。这是因为路径会绑定自定义装饰器的内函数，之前其他视图绑定的其实并不是视图本身，而是自定义装饰器的内函数，这次实质上也去绑定内函数，所以会报错。通过查看底层代码是因为 <code>Flask</code> 的路由地址根据属性 <code>__name__</code> 绑定视图名称。</p><p><strong><em>更多精彩文章请关注公众号『大海的BLOG』</em></strong></p>]]></content>
    
    <summary type="html">
    
      python的这些小知识你注意到了吗？
    
    </summary>
    
    
      <category term="技术" scheme="https://www.8868866.xyz/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="语言类" scheme="https://www.8868866.xyz/tags/%E8%AF%AD%E8%A8%80%E7%B1%BB/"/>
    
  </entry>
  
</feed>
